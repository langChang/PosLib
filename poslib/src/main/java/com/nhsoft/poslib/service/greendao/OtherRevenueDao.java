package com.nhsoft.poslib.service.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.nhsoft.poslib.entity.OtherRevenue;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "OTHER_REVENUE".
*/
public class OtherRevenueDao extends AbstractDao<OtherRevenue, Long> {

    public static final String TABLENAME = "OTHER_REVENUE";

    /**
     * Properties of entity OtherRevenue.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Account_bank_num = new Property(1, int.class, "account_bank_num", false, "ACCOUNT_BANK_NUM");
        public final static Property Branch_num = new Property(2, int.class, "branch_num", false, "BRANCH_NUM");
        public final static Property Client_fid = new Property(3, String.class, "client_fid", false, "CLIENT_FID");
        public final static Property Inner_branch_num = new Property(4, int.class, "inner_branch_num", false, "INNER_BRANCH_NUM");
        public final static Property Other_inout_audit_man = new Property(5, String.class, "other_inout_audit_man", false, "OTHER_INOUT_AUDIT_MAN");
        public final static Property Other_inout_audit_time = new Property(6, String.class, "other_inout_audit_time", false, "OTHER_INOUT_AUDIT_TIME");
        public final static Property Other_inout_bill_no = new Property(7, String.class, "other_inout_bill_no", false, "OTHER_INOUT_BILL_NO");
        public final static Property Other_inout_bizday = new Property(8, String.class, "other_inout_bizday", false, "OTHER_INOUT_BIZDAY");
        public final static Property Other_inout_create_time = new Property(9, String.class, "other_inout_create_time", false, "OTHER_INOUT_CREATE_TIME");
        public final static Property Other_inout_creator = new Property(10, String.class, "other_inout_creator", false, "OTHER_INOUT_CREATOR");
        public final static Property Other_inout_date = new Property(11, String.class, "other_inout_date", false, "OTHER_INOUT_DATE");
        public final static Property Other_inout_kind = new Property(12, String.class, "other_inout_kind", false, "OTHER_INOUT_KIND");
        public final static Property Other_inout_machine = new Property(13, String.class, "other_inout_machine", false, "OTHER_INOUT_MACHINE");
        public final static Property Other_inout_memo = new Property(14, String.class, "other_inout_memo", false, "OTHER_INOUT_MEMO");
        public final static Property Other_inout_money = new Property(15, Float.class, "other_inout_money", false, "OTHER_INOUT_MONEY");
        public final static Property Other_inout_operator = new Property(16, String.class, "other_inout_operator", false, "OTHER_INOUT_OPERATOR");
        public final static Property Other_inout_payment_type = new Property(17, String.class, "other_inout_payment_type", false, "OTHER_INOUT_PAYMENT_TYPE");
        public final static Property Other_inout_ref_bill = new Property(18, String.class, "other_inout_ref_bill", false, "OTHER_INOUT_REF_BILL");
        public final static Property Other_inout_shift_table_num = new Property(19, int.class, "other_inout_shift_table_num", false, "OTHER_INOUT_SHIFT_TABLE_NUM");
        public final static Property Supplier_num = new Property(20, int.class, "supplier_num", false, "SUPPLIER_NUM");
        public final static Property System_book_code = new Property(21, String.class, "system_book_code", false, "SYSTEM_BOOK_CODE");
        public final static Property PayBarCode = new Property(22, String.class, "payBarCode", false, "PAY_BAR_CODE");
    }


    public OtherRevenueDao(DaoConfig config) {
        super(config);
    }
    
    public OtherRevenueDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"OTHER_REVENUE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"ACCOUNT_BANK_NUM\" INTEGER NOT NULL ," + // 1: account_bank_num
                "\"BRANCH_NUM\" INTEGER NOT NULL ," + // 2: branch_num
                "\"CLIENT_FID\" TEXT," + // 3: client_fid
                "\"INNER_BRANCH_NUM\" INTEGER NOT NULL ," + // 4: inner_branch_num
                "\"OTHER_INOUT_AUDIT_MAN\" TEXT," + // 5: other_inout_audit_man
                "\"OTHER_INOUT_AUDIT_TIME\" TEXT," + // 6: other_inout_audit_time
                "\"OTHER_INOUT_BILL_NO\" TEXT," + // 7: other_inout_bill_no
                "\"OTHER_INOUT_BIZDAY\" TEXT," + // 8: other_inout_bizday
                "\"OTHER_INOUT_CREATE_TIME\" TEXT," + // 9: other_inout_create_time
                "\"OTHER_INOUT_CREATOR\" TEXT," + // 10: other_inout_creator
                "\"OTHER_INOUT_DATE\" TEXT," + // 11: other_inout_date
                "\"OTHER_INOUT_KIND\" TEXT," + // 12: other_inout_kind
                "\"OTHER_INOUT_MACHINE\" TEXT," + // 13: other_inout_machine
                "\"OTHER_INOUT_MEMO\" TEXT," + // 14: other_inout_memo
                "\"OTHER_INOUT_MONEY\" REAL," + // 15: other_inout_money
                "\"OTHER_INOUT_OPERATOR\" TEXT," + // 16: other_inout_operator
                "\"OTHER_INOUT_PAYMENT_TYPE\" TEXT," + // 17: other_inout_payment_type
                "\"OTHER_INOUT_REF_BILL\" TEXT," + // 18: other_inout_ref_bill
                "\"OTHER_INOUT_SHIFT_TABLE_NUM\" INTEGER NOT NULL ," + // 19: other_inout_shift_table_num
                "\"SUPPLIER_NUM\" INTEGER NOT NULL ," + // 20: supplier_num
                "\"SYSTEM_BOOK_CODE\" TEXT," + // 21: system_book_code
                "\"PAY_BAR_CODE\" TEXT);"); // 22: payBarCode
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"OTHER_REVENUE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, OtherRevenue entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getAccount_bank_num());
        stmt.bindLong(3, entity.getBranch_num());
 
        String client_fid = entity.getClient_fid();
        if (client_fid != null) {
            stmt.bindString(4, client_fid);
        }
        stmt.bindLong(5, entity.getInner_branch_num());
 
        String other_inout_audit_man = entity.getOther_inout_audit_man();
        if (other_inout_audit_man != null) {
            stmt.bindString(6, other_inout_audit_man);
        }
 
        String other_inout_audit_time = entity.getOther_inout_audit_time();
        if (other_inout_audit_time != null) {
            stmt.bindString(7, other_inout_audit_time);
        }
 
        String other_inout_bill_no = entity.getOther_inout_bill_no();
        if (other_inout_bill_no != null) {
            stmt.bindString(8, other_inout_bill_no);
        }
 
        String other_inout_bizday = entity.getOther_inout_bizday();
        if (other_inout_bizday != null) {
            stmt.bindString(9, other_inout_bizday);
        }
 
        String other_inout_create_time = entity.getOther_inout_create_time();
        if (other_inout_create_time != null) {
            stmt.bindString(10, other_inout_create_time);
        }
 
        String other_inout_creator = entity.getOther_inout_creator();
        if (other_inout_creator != null) {
            stmt.bindString(11, other_inout_creator);
        }
 
        String other_inout_date = entity.getOther_inout_date();
        if (other_inout_date != null) {
            stmt.bindString(12, other_inout_date);
        }
 
        String other_inout_kind = entity.getOther_inout_kind();
        if (other_inout_kind != null) {
            stmt.bindString(13, other_inout_kind);
        }
 
        String other_inout_machine = entity.getOther_inout_machine();
        if (other_inout_machine != null) {
            stmt.bindString(14, other_inout_machine);
        }
 
        String other_inout_memo = entity.getOther_inout_memo();
        if (other_inout_memo != null) {
            stmt.bindString(15, other_inout_memo);
        }
 
        Float other_inout_money = entity.getOther_inout_money();
        if (other_inout_money != null) {
            stmt.bindDouble(16, other_inout_money);
        }
 
        String other_inout_operator = entity.getOther_inout_operator();
        if (other_inout_operator != null) {
            stmt.bindString(17, other_inout_operator);
        }
 
        String other_inout_payment_type = entity.getOther_inout_payment_type();
        if (other_inout_payment_type != null) {
            stmt.bindString(18, other_inout_payment_type);
        }
 
        String other_inout_ref_bill = entity.getOther_inout_ref_bill();
        if (other_inout_ref_bill != null) {
            stmt.bindString(19, other_inout_ref_bill);
        }
        stmt.bindLong(20, entity.getOther_inout_shift_table_num());
        stmt.bindLong(21, entity.getSupplier_num());
 
        String system_book_code = entity.getSystem_book_code();
        if (system_book_code != null) {
            stmt.bindString(22, system_book_code);
        }
 
        String payBarCode = entity.getPayBarCode();
        if (payBarCode != null) {
            stmt.bindString(23, payBarCode);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, OtherRevenue entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getAccount_bank_num());
        stmt.bindLong(3, entity.getBranch_num());
 
        String client_fid = entity.getClient_fid();
        if (client_fid != null) {
            stmt.bindString(4, client_fid);
        }
        stmt.bindLong(5, entity.getInner_branch_num());
 
        String other_inout_audit_man = entity.getOther_inout_audit_man();
        if (other_inout_audit_man != null) {
            stmt.bindString(6, other_inout_audit_man);
        }
 
        String other_inout_audit_time = entity.getOther_inout_audit_time();
        if (other_inout_audit_time != null) {
            stmt.bindString(7, other_inout_audit_time);
        }
 
        String other_inout_bill_no = entity.getOther_inout_bill_no();
        if (other_inout_bill_no != null) {
            stmt.bindString(8, other_inout_bill_no);
        }
 
        String other_inout_bizday = entity.getOther_inout_bizday();
        if (other_inout_bizday != null) {
            stmt.bindString(9, other_inout_bizday);
        }
 
        String other_inout_create_time = entity.getOther_inout_create_time();
        if (other_inout_create_time != null) {
            stmt.bindString(10, other_inout_create_time);
        }
 
        String other_inout_creator = entity.getOther_inout_creator();
        if (other_inout_creator != null) {
            stmt.bindString(11, other_inout_creator);
        }
 
        String other_inout_date = entity.getOther_inout_date();
        if (other_inout_date != null) {
            stmt.bindString(12, other_inout_date);
        }
 
        String other_inout_kind = entity.getOther_inout_kind();
        if (other_inout_kind != null) {
            stmt.bindString(13, other_inout_kind);
        }
 
        String other_inout_machine = entity.getOther_inout_machine();
        if (other_inout_machine != null) {
            stmt.bindString(14, other_inout_machine);
        }
 
        String other_inout_memo = entity.getOther_inout_memo();
        if (other_inout_memo != null) {
            stmt.bindString(15, other_inout_memo);
        }
 
        Float other_inout_money = entity.getOther_inout_money();
        if (other_inout_money != null) {
            stmt.bindDouble(16, other_inout_money);
        }
 
        String other_inout_operator = entity.getOther_inout_operator();
        if (other_inout_operator != null) {
            stmt.bindString(17, other_inout_operator);
        }
 
        String other_inout_payment_type = entity.getOther_inout_payment_type();
        if (other_inout_payment_type != null) {
            stmt.bindString(18, other_inout_payment_type);
        }
 
        String other_inout_ref_bill = entity.getOther_inout_ref_bill();
        if (other_inout_ref_bill != null) {
            stmt.bindString(19, other_inout_ref_bill);
        }
        stmt.bindLong(20, entity.getOther_inout_shift_table_num());
        stmt.bindLong(21, entity.getSupplier_num());
 
        String system_book_code = entity.getSystem_book_code();
        if (system_book_code != null) {
            stmt.bindString(22, system_book_code);
        }
 
        String payBarCode = entity.getPayBarCode();
        if (payBarCode != null) {
            stmt.bindString(23, payBarCode);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public OtherRevenue readEntity(Cursor cursor, int offset) {
        OtherRevenue entity = new OtherRevenue( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getInt(offset + 1), // account_bank_num
            cursor.getInt(offset + 2), // branch_num
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // client_fid
            cursor.getInt(offset + 4), // inner_branch_num
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // other_inout_audit_man
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // other_inout_audit_time
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // other_inout_bill_no
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // other_inout_bizday
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // other_inout_create_time
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // other_inout_creator
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // other_inout_date
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // other_inout_kind
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // other_inout_machine
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // other_inout_memo
            cursor.isNull(offset + 15) ? null : cursor.getFloat(offset + 15), // other_inout_money
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // other_inout_operator
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // other_inout_payment_type
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // other_inout_ref_bill
            cursor.getInt(offset + 19), // other_inout_shift_table_num
            cursor.getInt(offset + 20), // supplier_num
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // system_book_code
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22) // payBarCode
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, OtherRevenue entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setAccount_bank_num(cursor.getInt(offset + 1));
        entity.setBranch_num(cursor.getInt(offset + 2));
        entity.setClient_fid(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setInner_branch_num(cursor.getInt(offset + 4));
        entity.setOther_inout_audit_man(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setOther_inout_audit_time(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setOther_inout_bill_no(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setOther_inout_bizday(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setOther_inout_create_time(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setOther_inout_creator(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setOther_inout_date(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setOther_inout_kind(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setOther_inout_machine(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setOther_inout_memo(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setOther_inout_money(cursor.isNull(offset + 15) ? null : cursor.getFloat(offset + 15));
        entity.setOther_inout_operator(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setOther_inout_payment_type(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setOther_inout_ref_bill(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setOther_inout_shift_table_num(cursor.getInt(offset + 19));
        entity.setSupplier_num(cursor.getInt(offset + 20));
        entity.setSystem_book_code(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setPayBarCode(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(OtherRevenue entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(OtherRevenue entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(OtherRevenue entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
