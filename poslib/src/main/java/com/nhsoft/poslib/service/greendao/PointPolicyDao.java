package com.nhsoft.poslib.service.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.nhsoft.poslib.entity.PointPolicy;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "POINT_POLICY".
*/
public class PointPolicyDao extends AbstractDao<PointPolicy, String> {

    public static final String TABLENAME = "POINT_POLICY";

    /**
     * Properties of entity PointPolicy.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Point_policy_id = new Property(0, String.class, "point_policy_id", true, "POINT_POLICY_ID");
        public final static Property System_book_code = new Property(1, String.class, "system_book_code", false, "SYSTEM_BOOK_CODE");
        public final static Property Point_policy_name = new Property(2, String.class, "point_policy_name", false, "POINT_POLICY_NAME");
        public final static Property Point_policy_date_from = new Property(3, String.class, "point_policy_date_from", false, "POINT_POLICY_DATE_FROM");
        public final static Property Point_policy_date_to = new Property(4, String.class, "point_policy_date_to", false, "POINT_POLICY_DATE_TO");
        public final static Property Point_policy_time_from = new Property(5, String.class, "point_policy_time_from", false, "POINT_POLICY_TIME_FROM");
        public final static Property Point_policy_time_to = new Property(6, String.class, "point_policy_time_to", false, "POINT_POLICY_TIME_TO");
        public final static Property Point_policy_mon_actived = new Property(7, boolean.class, "point_policy_mon_actived", false, "POINT_POLICY_MON_ACTIVED");
        public final static Property Point_policy_tues_actived = new Property(8, boolean.class, "point_policy_tues_actived", false, "POINT_POLICY_TUES_ACTIVED");
        public final static Property Point_policy_wed_actived = new Property(9, boolean.class, "point_policy_wed_actived", false, "POINT_POLICY_WED_ACTIVED");
        public final static Property Point_policy_thurs_actived = new Property(10, boolean.class, "point_policy_thurs_actived", false, "POINT_POLICY_THURS_ACTIVED");
        public final static Property Point_policy_friday_actived = new Property(11, boolean.class, "point_policy_friday_actived", false, "POINT_POLICY_FRIDAY_ACTIVED");
        public final static Property Point_policy_sat_actived = new Property(12, boolean.class, "point_policy_sat_actived", false, "POINT_POLICY_SAT_ACTIVED");
        public final static Property Point_policy_sun_actived = new Property(13, boolean.class, "point_policy_sun_actived", false, "POINT_POLICY_SUN_ACTIVED");
        public final static Property Point_policy_multiple = new Property(14, double.class, "point_policy_multiple", false, "POINT_POLICY_MULTIPLE");
        public final static Property Point_policy_creator = new Property(15, String.class, "point_policy_creator", false, "POINT_POLICY_CREATOR");
        public final static Property Point_policy_status = new Property(16, boolean.class, "point_policy_status", false, "POINT_POLICY_STATUS");
        public final static Property Point_policy_all_item = new Property(17, boolean.class, "point_policy_all_item", false, "POINT_POLICY_ALL_ITEM");
        public final static Property Point_policy_type = new Property(18, String.class, "point_policy_type", false, "POINT_POLICY_TYPE");
        public final static Property Point_policy_applied_branch = new Property(19, String.class, "point_policy_applied_branch", false, "POINT_POLICY_APPLIED_BRANCH");
        public final static Property Point_policy_repeat_type = new Property(20, String.class, "point_policy_repeat_type", false, "POINT_POLICY_REPEAT_TYPE");
        public final static Property Point_policy_level_ids = new Property(21, String.class, "point_policy_level_ids", false, "POINT_POLICY_LEVEL_IDS");
    }

    private DaoSession daoSession;


    public PointPolicyDao(DaoConfig config) {
        super(config);
    }
    
    public PointPolicyDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"POINT_POLICY\" (" + //
                "\"POINT_POLICY_ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: point_policy_id
                "\"SYSTEM_BOOK_CODE\" TEXT," + // 1: system_book_code
                "\"POINT_POLICY_NAME\" TEXT," + // 2: point_policy_name
                "\"POINT_POLICY_DATE_FROM\" TEXT," + // 3: point_policy_date_from
                "\"POINT_POLICY_DATE_TO\" TEXT," + // 4: point_policy_date_to
                "\"POINT_POLICY_TIME_FROM\" TEXT," + // 5: point_policy_time_from
                "\"POINT_POLICY_TIME_TO\" TEXT," + // 6: point_policy_time_to
                "\"POINT_POLICY_MON_ACTIVED\" INTEGER NOT NULL ," + // 7: point_policy_mon_actived
                "\"POINT_POLICY_TUES_ACTIVED\" INTEGER NOT NULL ," + // 8: point_policy_tues_actived
                "\"POINT_POLICY_WED_ACTIVED\" INTEGER NOT NULL ," + // 9: point_policy_wed_actived
                "\"POINT_POLICY_THURS_ACTIVED\" INTEGER NOT NULL ," + // 10: point_policy_thurs_actived
                "\"POINT_POLICY_FRIDAY_ACTIVED\" INTEGER NOT NULL ," + // 11: point_policy_friday_actived
                "\"POINT_POLICY_SAT_ACTIVED\" INTEGER NOT NULL ," + // 12: point_policy_sat_actived
                "\"POINT_POLICY_SUN_ACTIVED\" INTEGER NOT NULL ," + // 13: point_policy_sun_actived
                "\"POINT_POLICY_MULTIPLE\" REAL NOT NULL ," + // 14: point_policy_multiple
                "\"POINT_POLICY_CREATOR\" TEXT," + // 15: point_policy_creator
                "\"POINT_POLICY_STATUS\" INTEGER NOT NULL ," + // 16: point_policy_status
                "\"POINT_POLICY_ALL_ITEM\" INTEGER NOT NULL ," + // 17: point_policy_all_item
                "\"POINT_POLICY_TYPE\" TEXT," + // 18: point_policy_type
                "\"POINT_POLICY_APPLIED_BRANCH\" TEXT," + // 19: point_policy_applied_branch
                "\"POINT_POLICY_REPEAT_TYPE\" TEXT," + // 20: point_policy_repeat_type
                "\"POINT_POLICY_LEVEL_IDS\" TEXT);"); // 21: point_policy_level_ids
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"POINT_POLICY\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, PointPolicy entity) {
        stmt.clearBindings();
 
        String point_policy_id = entity.getPoint_policy_id();
        if (point_policy_id != null) {
            stmt.bindString(1, point_policy_id);
        }
 
        String system_book_code = entity.getSystem_book_code();
        if (system_book_code != null) {
            stmt.bindString(2, system_book_code);
        }
 
        String point_policy_name = entity.getPoint_policy_name();
        if (point_policy_name != null) {
            stmt.bindString(3, point_policy_name);
        }
 
        String point_policy_date_from = entity.getPoint_policy_date_from();
        if (point_policy_date_from != null) {
            stmt.bindString(4, point_policy_date_from);
        }
 
        String point_policy_date_to = entity.getPoint_policy_date_to();
        if (point_policy_date_to != null) {
            stmt.bindString(5, point_policy_date_to);
        }
 
        String point_policy_time_from = entity.getPoint_policy_time_from();
        if (point_policy_time_from != null) {
            stmt.bindString(6, point_policy_time_from);
        }
 
        String point_policy_time_to = entity.getPoint_policy_time_to();
        if (point_policy_time_to != null) {
            stmt.bindString(7, point_policy_time_to);
        }
        stmt.bindLong(8, entity.getPoint_policy_mon_actived() ? 1L: 0L);
        stmt.bindLong(9, entity.getPoint_policy_tues_actived() ? 1L: 0L);
        stmt.bindLong(10, entity.getPoint_policy_wed_actived() ? 1L: 0L);
        stmt.bindLong(11, entity.getPoint_policy_thurs_actived() ? 1L: 0L);
        stmt.bindLong(12, entity.getPoint_policy_friday_actived() ? 1L: 0L);
        stmt.bindLong(13, entity.getPoint_policy_sat_actived() ? 1L: 0L);
        stmt.bindLong(14, entity.getPoint_policy_sun_actived() ? 1L: 0L);
        stmt.bindDouble(15, entity.getPoint_policy_multiple());
 
        String point_policy_creator = entity.getPoint_policy_creator();
        if (point_policy_creator != null) {
            stmt.bindString(16, point_policy_creator);
        }
        stmt.bindLong(17, entity.getPoint_policy_status() ? 1L: 0L);
        stmt.bindLong(18, entity.getPoint_policy_all_item() ? 1L: 0L);
 
        String point_policy_type = entity.getPoint_policy_type();
        if (point_policy_type != null) {
            stmt.bindString(19, point_policy_type);
        }
 
        String point_policy_applied_branch = entity.getPoint_policy_applied_branch();
        if (point_policy_applied_branch != null) {
            stmt.bindString(20, point_policy_applied_branch);
        }
 
        String point_policy_repeat_type = entity.getPoint_policy_repeat_type();
        if (point_policy_repeat_type != null) {
            stmt.bindString(21, point_policy_repeat_type);
        }
 
        String point_policy_level_ids = entity.getPoint_policy_level_ids();
        if (point_policy_level_ids != null) {
            stmt.bindString(22, point_policy_level_ids);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, PointPolicy entity) {
        stmt.clearBindings();
 
        String point_policy_id = entity.getPoint_policy_id();
        if (point_policy_id != null) {
            stmt.bindString(1, point_policy_id);
        }
 
        String system_book_code = entity.getSystem_book_code();
        if (system_book_code != null) {
            stmt.bindString(2, system_book_code);
        }
 
        String point_policy_name = entity.getPoint_policy_name();
        if (point_policy_name != null) {
            stmt.bindString(3, point_policy_name);
        }
 
        String point_policy_date_from = entity.getPoint_policy_date_from();
        if (point_policy_date_from != null) {
            stmt.bindString(4, point_policy_date_from);
        }
 
        String point_policy_date_to = entity.getPoint_policy_date_to();
        if (point_policy_date_to != null) {
            stmt.bindString(5, point_policy_date_to);
        }
 
        String point_policy_time_from = entity.getPoint_policy_time_from();
        if (point_policy_time_from != null) {
            stmt.bindString(6, point_policy_time_from);
        }
 
        String point_policy_time_to = entity.getPoint_policy_time_to();
        if (point_policy_time_to != null) {
            stmt.bindString(7, point_policy_time_to);
        }
        stmt.bindLong(8, entity.getPoint_policy_mon_actived() ? 1L: 0L);
        stmt.bindLong(9, entity.getPoint_policy_tues_actived() ? 1L: 0L);
        stmt.bindLong(10, entity.getPoint_policy_wed_actived() ? 1L: 0L);
        stmt.bindLong(11, entity.getPoint_policy_thurs_actived() ? 1L: 0L);
        stmt.bindLong(12, entity.getPoint_policy_friday_actived() ? 1L: 0L);
        stmt.bindLong(13, entity.getPoint_policy_sat_actived() ? 1L: 0L);
        stmt.bindLong(14, entity.getPoint_policy_sun_actived() ? 1L: 0L);
        stmt.bindDouble(15, entity.getPoint_policy_multiple());
 
        String point_policy_creator = entity.getPoint_policy_creator();
        if (point_policy_creator != null) {
            stmt.bindString(16, point_policy_creator);
        }
        stmt.bindLong(17, entity.getPoint_policy_status() ? 1L: 0L);
        stmt.bindLong(18, entity.getPoint_policy_all_item() ? 1L: 0L);
 
        String point_policy_type = entity.getPoint_policy_type();
        if (point_policy_type != null) {
            stmt.bindString(19, point_policy_type);
        }
 
        String point_policy_applied_branch = entity.getPoint_policy_applied_branch();
        if (point_policy_applied_branch != null) {
            stmt.bindString(20, point_policy_applied_branch);
        }
 
        String point_policy_repeat_type = entity.getPoint_policy_repeat_type();
        if (point_policy_repeat_type != null) {
            stmt.bindString(21, point_policy_repeat_type);
        }
 
        String point_policy_level_ids = entity.getPoint_policy_level_ids();
        if (point_policy_level_ids != null) {
            stmt.bindString(22, point_policy_level_ids);
        }
    }

    @Override
    protected final void attachEntity(PointPolicy entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public PointPolicy readEntity(Cursor cursor, int offset) {
        PointPolicy entity = new PointPolicy( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // point_policy_id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // system_book_code
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // point_policy_name
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // point_policy_date_from
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // point_policy_date_to
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // point_policy_time_from
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // point_policy_time_to
            cursor.getShort(offset + 7) != 0, // point_policy_mon_actived
            cursor.getShort(offset + 8) != 0, // point_policy_tues_actived
            cursor.getShort(offset + 9) != 0, // point_policy_wed_actived
            cursor.getShort(offset + 10) != 0, // point_policy_thurs_actived
            cursor.getShort(offset + 11) != 0, // point_policy_friday_actived
            cursor.getShort(offset + 12) != 0, // point_policy_sat_actived
            cursor.getShort(offset + 13) != 0, // point_policy_sun_actived
            cursor.getDouble(offset + 14), // point_policy_multiple
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // point_policy_creator
            cursor.getShort(offset + 16) != 0, // point_policy_status
            cursor.getShort(offset + 17) != 0, // point_policy_all_item
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // point_policy_type
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // point_policy_applied_branch
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // point_policy_repeat_type
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21) // point_policy_level_ids
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, PointPolicy entity, int offset) {
        entity.setPoint_policy_id(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setSystem_book_code(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setPoint_policy_name(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setPoint_policy_date_from(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPoint_policy_date_to(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPoint_policy_time_from(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setPoint_policy_time_to(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setPoint_policy_mon_actived(cursor.getShort(offset + 7) != 0);
        entity.setPoint_policy_tues_actived(cursor.getShort(offset + 8) != 0);
        entity.setPoint_policy_wed_actived(cursor.getShort(offset + 9) != 0);
        entity.setPoint_policy_thurs_actived(cursor.getShort(offset + 10) != 0);
        entity.setPoint_policy_friday_actived(cursor.getShort(offset + 11) != 0);
        entity.setPoint_policy_sat_actived(cursor.getShort(offset + 12) != 0);
        entity.setPoint_policy_sun_actived(cursor.getShort(offset + 13) != 0);
        entity.setPoint_policy_multiple(cursor.getDouble(offset + 14));
        entity.setPoint_policy_creator(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setPoint_policy_status(cursor.getShort(offset + 16) != 0);
        entity.setPoint_policy_all_item(cursor.getShort(offset + 17) != 0);
        entity.setPoint_policy_type(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setPoint_policy_applied_branch(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setPoint_policy_repeat_type(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setPoint_policy_level_ids(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
     }
    
    @Override
    protected final String updateKeyAfterInsert(PointPolicy entity, long rowId) {
        return entity.getPoint_policy_id();
    }
    
    @Override
    public String getKey(PointPolicy entity) {
        if(entity != null) {
            return entity.getPoint_policy_id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(PointPolicy entity) {
        return entity.getPoint_policy_id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
