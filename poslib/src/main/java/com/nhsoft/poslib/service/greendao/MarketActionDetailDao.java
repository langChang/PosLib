package com.nhsoft.poslib.service.greendao;

import java.util.List;
import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;
import org.greenrobot.greendao.query.Query;
import org.greenrobot.greendao.query.QueryBuilder;

import com.nhsoft.poslib.entity.MarketActionDetail;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "MARKET_ACTION_DETAIL".
*/
public class MarketActionDetailDao extends AbstractDao<MarketActionDetail, Long> {

    public static final String TABLENAME = "MARKET_ACTION_DETAIL";

    /**
     * Properties of entity MarketActionDetail.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Action_id = new Property(1, String.class, "action_id", false, "ACTION_ID");
        public final static Property Market_action_detail_num = new Property(2, int.class, "market_action_detail_num", false, "MARKET_ACTION_DETAIL_NUM");
        public final static Property Market_action_detail_amount = new Property(3, int.class, "market_action_detail_amount", false, "MARKET_ACTION_DETAIL_AMOUNT");
        public final static Property Market_action_detail_type_name = new Property(4, String.class, "market_action_detail_type_name", false, "MARKET_ACTION_DETAIL_TYPE_NAME");
        public final static Property Market_action_detail_branch = new Property(5, String.class, "market_action_detail_branch", false, "MARKET_ACTION_DETAIL_BRANCH");
        public final static Property Market_action_detail_value = new Property(6, double.class, "market_action_detail_value", false, "MARKET_ACTION_DETAIL_VALUE");
        public final static Property Market_action_detail_day = new Property(7, int.class, "market_action_detail_day", false, "MARKET_ACTION_DETAIL_DAY");
        public final static Property Market_action_detail_grade = new Property(8, float.class, "market_action_detail_grade", false, "MARKET_ACTION_DETAIL_GRADE");
        public final static Property Market_action_detail_grade_to = new Property(9, Float.class, "market_action_detail_grade_to", false, "MARKET_ACTION_DETAIL_GRADE_TO");
        public final static Property Market_action_detail_effective_date = new Property(10, String.class, "market_action_detail_effective_date", false, "MARKET_ACTION_DETAIL_EFFECTIVE_DATE");
        public final static Property Market_action_detail_date = new Property(11, String.class, "market_action_detail_date", false, "MARKET_ACTION_DETAIL_DATE");
        public final static Property Market_action_detail_auto_value = new Property(12, boolean.class, "market_action_detail_auto_value", false, "MARKET_ACTION_DETAIL_AUTO_VALUE");
        public final static Property Market_action_detail_value_min = new Property(13, float.class, "market_action_detail_value_min", false, "MARKET_ACTION_DETAIL_VALUE_MIN");
        public final static Property Market_action_detail_value_max = new Property(14, float.class, "market_action_detail_value_max", false, "MARKET_ACTION_DETAIL_VALUE_MAX");
        public final static Property Market_action_detail_self_branch = new Property(15, boolean.class, "market_action_detail_self_branch", false, "MARKET_ACTION_DETAIL_SELF_BRANCH");
        public final static Property Market_action_detail_valid_type = new Property(16, String.class, "market_action_detail_valid_type", false, "MARKET_ACTION_DETAIL_VALID_TYPE");
        public final static Property Market_action_detail_start = new Property(17, Integer.class, "market_action_detail_start", false, "MARKET_ACTION_DETAIL_START");
        public final static Property Coupon_action_detail_id = new Property(18, String.class, "coupon_action_detail_id", false, "COUPON_ACTION_DETAIL_ID");
    }

    private Query<MarketActionDetail> marketAction_Market_action_detailsQuery;

    public MarketActionDetailDao(DaoConfig config) {
        super(config);
    }
    
    public MarketActionDetailDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"MARKET_ACTION_DETAIL\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"ACTION_ID\" TEXT," + // 1: action_id
                "\"MARKET_ACTION_DETAIL_NUM\" INTEGER NOT NULL ," + // 2: market_action_detail_num
                "\"MARKET_ACTION_DETAIL_AMOUNT\" INTEGER NOT NULL ," + // 3: market_action_detail_amount
                "\"MARKET_ACTION_DETAIL_TYPE_NAME\" TEXT," + // 4: market_action_detail_type_name
                "\"MARKET_ACTION_DETAIL_BRANCH\" TEXT," + // 5: market_action_detail_branch
                "\"MARKET_ACTION_DETAIL_VALUE\" REAL NOT NULL ," + // 6: market_action_detail_value
                "\"MARKET_ACTION_DETAIL_DAY\" INTEGER NOT NULL ," + // 7: market_action_detail_day
                "\"MARKET_ACTION_DETAIL_GRADE\" REAL NOT NULL ," + // 8: market_action_detail_grade
                "\"MARKET_ACTION_DETAIL_GRADE_TO\" REAL," + // 9: market_action_detail_grade_to
                "\"MARKET_ACTION_DETAIL_EFFECTIVE_DATE\" TEXT," + // 10: market_action_detail_effective_date
                "\"MARKET_ACTION_DETAIL_DATE\" TEXT," + // 11: market_action_detail_date
                "\"MARKET_ACTION_DETAIL_AUTO_VALUE\" INTEGER NOT NULL ," + // 12: market_action_detail_auto_value
                "\"MARKET_ACTION_DETAIL_VALUE_MIN\" REAL NOT NULL ," + // 13: market_action_detail_value_min
                "\"MARKET_ACTION_DETAIL_VALUE_MAX\" REAL NOT NULL ," + // 14: market_action_detail_value_max
                "\"MARKET_ACTION_DETAIL_SELF_BRANCH\" INTEGER NOT NULL ," + // 15: market_action_detail_self_branch
                "\"MARKET_ACTION_DETAIL_VALID_TYPE\" TEXT," + // 16: market_action_detail_valid_type
                "\"MARKET_ACTION_DETAIL_START\" INTEGER," + // 17: market_action_detail_start
                "\"COUPON_ACTION_DETAIL_ID\" TEXT);"); // 18: coupon_action_detail_id
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"MARKET_ACTION_DETAIL\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, MarketActionDetail entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String action_id = entity.getAction_id();
        if (action_id != null) {
            stmt.bindString(2, action_id);
        }
        stmt.bindLong(3, entity.getMarket_action_detail_num());
        stmt.bindLong(4, entity.getMarket_action_detail_amount());
 
        String market_action_detail_type_name = entity.getMarket_action_detail_type_name();
        if (market_action_detail_type_name != null) {
            stmt.bindString(5, market_action_detail_type_name);
        }
 
        String market_action_detail_branch = entity.getMarket_action_detail_branch();
        if (market_action_detail_branch != null) {
            stmt.bindString(6, market_action_detail_branch);
        }
        stmt.bindDouble(7, entity.getMarket_action_detail_value());
        stmt.bindLong(8, entity.getMarket_action_detail_day());
        stmt.bindDouble(9, entity.getMarket_action_detail_grade());
 
        Float market_action_detail_grade_to = entity.getMarket_action_detail_grade_to();
        if (market_action_detail_grade_to != null) {
            stmt.bindDouble(10, market_action_detail_grade_to);
        }
 
        String market_action_detail_effective_date = entity.getMarket_action_detail_effective_date();
        if (market_action_detail_effective_date != null) {
            stmt.bindString(11, market_action_detail_effective_date);
        }
 
        String market_action_detail_date = entity.getMarket_action_detail_date();
        if (market_action_detail_date != null) {
            stmt.bindString(12, market_action_detail_date);
        }
        stmt.bindLong(13, entity.getMarket_action_detail_auto_value() ? 1L: 0L);
        stmt.bindDouble(14, entity.getMarket_action_detail_value_min());
        stmt.bindDouble(15, entity.getMarket_action_detail_value_max());
        stmt.bindLong(16, entity.getMarket_action_detail_self_branch() ? 1L: 0L);
 
        String market_action_detail_valid_type = entity.getMarket_action_detail_valid_type();
        if (market_action_detail_valid_type != null) {
            stmt.bindString(17, market_action_detail_valid_type);
        }
 
        Integer market_action_detail_start = entity.getMarket_action_detail_start();
        if (market_action_detail_start != null) {
            stmt.bindLong(18, market_action_detail_start);
        }
 
        String coupon_action_detail_id = entity.getCoupon_action_detail_id();
        if (coupon_action_detail_id != null) {
            stmt.bindString(19, coupon_action_detail_id);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, MarketActionDetail entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String action_id = entity.getAction_id();
        if (action_id != null) {
            stmt.bindString(2, action_id);
        }
        stmt.bindLong(3, entity.getMarket_action_detail_num());
        stmt.bindLong(4, entity.getMarket_action_detail_amount());
 
        String market_action_detail_type_name = entity.getMarket_action_detail_type_name();
        if (market_action_detail_type_name != null) {
            stmt.bindString(5, market_action_detail_type_name);
        }
 
        String market_action_detail_branch = entity.getMarket_action_detail_branch();
        if (market_action_detail_branch != null) {
            stmt.bindString(6, market_action_detail_branch);
        }
        stmt.bindDouble(7, entity.getMarket_action_detail_value());
        stmt.bindLong(8, entity.getMarket_action_detail_day());
        stmt.bindDouble(9, entity.getMarket_action_detail_grade());
 
        Float market_action_detail_grade_to = entity.getMarket_action_detail_grade_to();
        if (market_action_detail_grade_to != null) {
            stmt.bindDouble(10, market_action_detail_grade_to);
        }
 
        String market_action_detail_effective_date = entity.getMarket_action_detail_effective_date();
        if (market_action_detail_effective_date != null) {
            stmt.bindString(11, market_action_detail_effective_date);
        }
 
        String market_action_detail_date = entity.getMarket_action_detail_date();
        if (market_action_detail_date != null) {
            stmt.bindString(12, market_action_detail_date);
        }
        stmt.bindLong(13, entity.getMarket_action_detail_auto_value() ? 1L: 0L);
        stmt.bindDouble(14, entity.getMarket_action_detail_value_min());
        stmt.bindDouble(15, entity.getMarket_action_detail_value_max());
        stmt.bindLong(16, entity.getMarket_action_detail_self_branch() ? 1L: 0L);
 
        String market_action_detail_valid_type = entity.getMarket_action_detail_valid_type();
        if (market_action_detail_valid_type != null) {
            stmt.bindString(17, market_action_detail_valid_type);
        }
 
        Integer market_action_detail_start = entity.getMarket_action_detail_start();
        if (market_action_detail_start != null) {
            stmt.bindLong(18, market_action_detail_start);
        }
 
        String coupon_action_detail_id = entity.getCoupon_action_detail_id();
        if (coupon_action_detail_id != null) {
            stmt.bindString(19, coupon_action_detail_id);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public MarketActionDetail readEntity(Cursor cursor, int offset) {
        MarketActionDetail entity = new MarketActionDetail( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // action_id
            cursor.getInt(offset + 2), // market_action_detail_num
            cursor.getInt(offset + 3), // market_action_detail_amount
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // market_action_detail_type_name
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // market_action_detail_branch
            cursor.getDouble(offset + 6), // market_action_detail_value
            cursor.getInt(offset + 7), // market_action_detail_day
            cursor.getFloat(offset + 8), // market_action_detail_grade
            cursor.isNull(offset + 9) ? null : cursor.getFloat(offset + 9), // market_action_detail_grade_to
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // market_action_detail_effective_date
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // market_action_detail_date
            cursor.getShort(offset + 12) != 0, // market_action_detail_auto_value
            cursor.getFloat(offset + 13), // market_action_detail_value_min
            cursor.getFloat(offset + 14), // market_action_detail_value_max
            cursor.getShort(offset + 15) != 0, // market_action_detail_self_branch
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // market_action_detail_valid_type
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // market_action_detail_start
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18) // coupon_action_detail_id
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, MarketActionDetail entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setAction_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setMarket_action_detail_num(cursor.getInt(offset + 2));
        entity.setMarket_action_detail_amount(cursor.getInt(offset + 3));
        entity.setMarket_action_detail_type_name(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setMarket_action_detail_branch(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setMarket_action_detail_value(cursor.getDouble(offset + 6));
        entity.setMarket_action_detail_day(cursor.getInt(offset + 7));
        entity.setMarket_action_detail_grade(cursor.getFloat(offset + 8));
        entity.setMarket_action_detail_grade_to(cursor.isNull(offset + 9) ? null : cursor.getFloat(offset + 9));
        entity.setMarket_action_detail_effective_date(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setMarket_action_detail_date(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setMarket_action_detail_auto_value(cursor.getShort(offset + 12) != 0);
        entity.setMarket_action_detail_value_min(cursor.getFloat(offset + 13));
        entity.setMarket_action_detail_value_max(cursor.getFloat(offset + 14));
        entity.setMarket_action_detail_self_branch(cursor.getShort(offset + 15) != 0);
        entity.setMarket_action_detail_valid_type(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setMarket_action_detail_start(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setCoupon_action_detail_id(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(MarketActionDetail entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(MarketActionDetail entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(MarketActionDetail entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
    /** Internal query to resolve the "market_action_details" to-many relationship of MarketAction. */
    public List<MarketActionDetail> _queryMarketAction_Market_action_details(String action_id) {
        synchronized (this) {
            if (marketAction_Market_action_detailsQuery == null) {
                QueryBuilder<MarketActionDetail> queryBuilder = queryBuilder();
                queryBuilder.where(Properties.Action_id.eq(null));
                marketAction_Market_action_detailsQuery = queryBuilder.build();
            }
        }
        Query<MarketActionDetail> query = marketAction_Market_action_detailsQuery.forCurrentThread();
        query.setParameter(0, action_id);
        return query.list();
    }

}
