package com.nhsoft.poslib.service.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.nhsoft.poslib.entity.nongmao.StallPromotion;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "STALL_PROMOTION".
*/
public class StallPromotionDao extends AbstractDao<StallPromotion, String> {

    public static final String TABLENAME = "STALL_PROMOTION";

    /**
     * Properties of entity StallPromotion.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Policy_promotion_no = new Property(0, String.class, "policy_promotion_no", true, "POLICY_PROMOTION_NO");
        public final static Property Branch_num = new Property(1, int.class, "branch_num", false, "BRANCH_NUM");
        public final static Property Merchant_num = new Property(2, int.class, "merchant_num", false, "MERCHANT_NUM");
        public final static Property Policy_promotion_audit_time = new Property(3, String.class, "policy_promotion_audit_time", false, "POLICY_PROMOTION_AUDIT_TIME");
        public final static Property Policy_promotion_auditor = new Property(4, String.class, "policy_promotion_auditor", false, "POLICY_PROMOTION_AUDITOR");
        public final static Property Policy_promotion_cancel_operator = new Property(5, String.class, "policy_promotion_cancel_operator", false, "POLICY_PROMOTION_CANCEL_OPERATOR");
        public final static Property Policy_promotion_cancel_time = new Property(6, String.class, "policy_promotion_cancel_time", false, "POLICY_PROMOTION_CANCEL_TIME");
        public final static Property Policy_promotion_card_once = new Property(7, boolean.class, "policy_promotion_card_once", false, "POLICY_PROMOTION_CARD_ONCE");
        public final static Property Policy_promotion_card_only = new Property(8, boolean.class, "policy_promotion_card_only", false, "POLICY_PROMOTION_CARD_ONLY");
        public final static Property Policy_promotion_card_type = new Property(9, String.class, "policy_promotion_card_type", false, "POLICY_PROMOTION_CARD_TYPE");
        public final static Property Policy_promotion_category = new Property(10, String.class, "policy_promotion_category", false, "POLICY_PROMOTION_CATEGORY");
        public final static Property Policy_promotion_create_time = new Property(11, String.class, "policy_promotion_create_time", false, "POLICY_PROMOTION_CREATE_TIME");
        public final static Property Policy_promotion_creator = new Property(12, String.class, "policy_promotion_creator", false, "POLICY_PROMOTION_CREATOR");
        public final static Property Policy_promotion_date_from = new Property(13, String.class, "policy_promotion_date_from", false, "POLICY_PROMOTION_DATE_FROM");
        public final static Property Policy_promotion_date_to = new Property(14, String.class, "policy_promotion_date_to", false, "POLICY_PROMOTION_DATE_TO");
        public final static Property Policy_promotion_discount = new Property(15, float.class, "policy_promotion_discount", false, "POLICY_PROMOTION_DISCOUNT");
        public final static Property Policy_promotion_except_item = new Property(16, String.class, "policy_promotion_except_item", false, "POLICY_PROMOTION_EXCEPT_ITEM");
        public final static Property Policy_promotion_memo = new Property(17, String.class, "policy_promotion_memo", false, "POLICY_PROMOTION_MEMO");
        public final static Property Policy_promotion_rate = new Property(18, float.class, "policy_promotion_rate", false, "POLICY_PROMOTION_RATE");
        public final static Property Policy_promotion_time_from = new Property(19, String.class, "policy_promotion_time_from", false, "POLICY_PROMOTION_TIME_FROM");
        public final static Property Policy_promotion_time_to = new Property(20, String.class, "policy_promotion_time_to", false, "POLICY_PROMOTION_TIME_TO");
        public final static Property Stall_num = new Property(21, int.class, "stall_num", false, "STALL_NUM");
        public final static Property Stall_promotion_all = new Property(22, boolean.class, "stall_promotion_all", false, "STALL_PROMOTION_ALL");
        public final static Property State_code = new Property(23, int.class, "state_code", false, "STATE_CODE");
        public final static Property State_name = new Property(24, String.class, "state_name", false, "STATE_NAME");
        public final static Property System_book_code = new Property(25, String.class, "system_book_code", false, "SYSTEM_BOOK_CODE");
        public final static Property StallList = new Property(26, String.class, "stallList", false, "STALL_LIST");
    }

    private DaoSession daoSession;


    public StallPromotionDao(DaoConfig config) {
        super(config);
    }
    
    public StallPromotionDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"STALL_PROMOTION\" (" + //
                "\"POLICY_PROMOTION_NO\" TEXT PRIMARY KEY NOT NULL ," + // 0: policy_promotion_no
                "\"BRANCH_NUM\" INTEGER NOT NULL ," + // 1: branch_num
                "\"MERCHANT_NUM\" INTEGER NOT NULL ," + // 2: merchant_num
                "\"POLICY_PROMOTION_AUDIT_TIME\" TEXT," + // 3: policy_promotion_audit_time
                "\"POLICY_PROMOTION_AUDITOR\" TEXT," + // 4: policy_promotion_auditor
                "\"POLICY_PROMOTION_CANCEL_OPERATOR\" TEXT," + // 5: policy_promotion_cancel_operator
                "\"POLICY_PROMOTION_CANCEL_TIME\" TEXT," + // 6: policy_promotion_cancel_time
                "\"POLICY_PROMOTION_CARD_ONCE\" INTEGER NOT NULL ," + // 7: policy_promotion_card_once
                "\"POLICY_PROMOTION_CARD_ONLY\" INTEGER NOT NULL ," + // 8: policy_promotion_card_only
                "\"POLICY_PROMOTION_CARD_TYPE\" TEXT," + // 9: policy_promotion_card_type
                "\"POLICY_PROMOTION_CATEGORY\" TEXT," + // 10: policy_promotion_category
                "\"POLICY_PROMOTION_CREATE_TIME\" TEXT," + // 11: policy_promotion_create_time
                "\"POLICY_PROMOTION_CREATOR\" TEXT," + // 12: policy_promotion_creator
                "\"POLICY_PROMOTION_DATE_FROM\" TEXT," + // 13: policy_promotion_date_from
                "\"POLICY_PROMOTION_DATE_TO\" TEXT," + // 14: policy_promotion_date_to
                "\"POLICY_PROMOTION_DISCOUNT\" REAL NOT NULL ," + // 15: policy_promotion_discount
                "\"POLICY_PROMOTION_EXCEPT_ITEM\" TEXT," + // 16: policy_promotion_except_item
                "\"POLICY_PROMOTION_MEMO\" TEXT," + // 17: policy_promotion_memo
                "\"POLICY_PROMOTION_RATE\" REAL NOT NULL ," + // 18: policy_promotion_rate
                "\"POLICY_PROMOTION_TIME_FROM\" TEXT," + // 19: policy_promotion_time_from
                "\"POLICY_PROMOTION_TIME_TO\" TEXT," + // 20: policy_promotion_time_to
                "\"STALL_NUM\" INTEGER NOT NULL ," + // 21: stall_num
                "\"STALL_PROMOTION_ALL\" INTEGER NOT NULL ," + // 22: stall_promotion_all
                "\"STATE_CODE\" INTEGER NOT NULL ," + // 23: state_code
                "\"STATE_NAME\" TEXT," + // 24: state_name
                "\"SYSTEM_BOOK_CODE\" TEXT," + // 25: system_book_code
                "\"STALL_LIST\" TEXT);"); // 26: stallList
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"STALL_PROMOTION\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, StallPromotion entity) {
        stmt.clearBindings();
 
        String policy_promotion_no = entity.getPolicy_promotion_no();
        if (policy_promotion_no != null) {
            stmt.bindString(1, policy_promotion_no);
        }
        stmt.bindLong(2, entity.getBranch_num());
        stmt.bindLong(3, entity.getMerchant_num());
 
        String policy_promotion_audit_time = entity.getPolicy_promotion_audit_time();
        if (policy_promotion_audit_time != null) {
            stmt.bindString(4, policy_promotion_audit_time);
        }
 
        String policy_promotion_auditor = entity.getPolicy_promotion_auditor();
        if (policy_promotion_auditor != null) {
            stmt.bindString(5, policy_promotion_auditor);
        }
 
        String policy_promotion_cancel_operator = entity.getPolicy_promotion_cancel_operator();
        if (policy_promotion_cancel_operator != null) {
            stmt.bindString(6, policy_promotion_cancel_operator);
        }
 
        String policy_promotion_cancel_time = entity.getPolicy_promotion_cancel_time();
        if (policy_promotion_cancel_time != null) {
            stmt.bindString(7, policy_promotion_cancel_time);
        }
        stmt.bindLong(8, entity.getPolicy_promotion_card_once() ? 1L: 0L);
        stmt.bindLong(9, entity.getPolicy_promotion_card_only() ? 1L: 0L);
 
        String policy_promotion_card_type = entity.getPolicy_promotion_card_type();
        if (policy_promotion_card_type != null) {
            stmt.bindString(10, policy_promotion_card_type);
        }
 
        String policy_promotion_category = entity.getPolicy_promotion_category();
        if (policy_promotion_category != null) {
            stmt.bindString(11, policy_promotion_category);
        }
 
        String policy_promotion_create_time = entity.getPolicy_promotion_create_time();
        if (policy_promotion_create_time != null) {
            stmt.bindString(12, policy_promotion_create_time);
        }
 
        String policy_promotion_creator = entity.getPolicy_promotion_creator();
        if (policy_promotion_creator != null) {
            stmt.bindString(13, policy_promotion_creator);
        }
 
        String policy_promotion_date_from = entity.getPolicy_promotion_date_from();
        if (policy_promotion_date_from != null) {
            stmt.bindString(14, policy_promotion_date_from);
        }
 
        String policy_promotion_date_to = entity.getPolicy_promotion_date_to();
        if (policy_promotion_date_to != null) {
            stmt.bindString(15, policy_promotion_date_to);
        }
        stmt.bindDouble(16, entity.getPolicy_promotion_discount());
 
        String policy_promotion_except_item = entity.getPolicy_promotion_except_item();
        if (policy_promotion_except_item != null) {
            stmt.bindString(17, policy_promotion_except_item);
        }
 
        String policy_promotion_memo = entity.getPolicy_promotion_memo();
        if (policy_promotion_memo != null) {
            stmt.bindString(18, policy_promotion_memo);
        }
        stmt.bindDouble(19, entity.getPolicy_promotion_rate());
 
        String policy_promotion_time_from = entity.getPolicy_promotion_time_from();
        if (policy_promotion_time_from != null) {
            stmt.bindString(20, policy_promotion_time_from);
        }
 
        String policy_promotion_time_to = entity.getPolicy_promotion_time_to();
        if (policy_promotion_time_to != null) {
            stmt.bindString(21, policy_promotion_time_to);
        }
        stmt.bindLong(22, entity.getStall_num());
        stmt.bindLong(23, entity.getStall_promotion_all() ? 1L: 0L);
        stmt.bindLong(24, entity.getState_code());
 
        String state_name = entity.getState_name();
        if (state_name != null) {
            stmt.bindString(25, state_name);
        }
 
        String system_book_code = entity.getSystem_book_code();
        if (system_book_code != null) {
            stmt.bindString(26, system_book_code);
        }
 
        String stallList = entity.getStallList();
        if (stallList != null) {
            stmt.bindString(27, stallList);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, StallPromotion entity) {
        stmt.clearBindings();
 
        String policy_promotion_no = entity.getPolicy_promotion_no();
        if (policy_promotion_no != null) {
            stmt.bindString(1, policy_promotion_no);
        }
        stmt.bindLong(2, entity.getBranch_num());
        stmt.bindLong(3, entity.getMerchant_num());
 
        String policy_promotion_audit_time = entity.getPolicy_promotion_audit_time();
        if (policy_promotion_audit_time != null) {
            stmt.bindString(4, policy_promotion_audit_time);
        }
 
        String policy_promotion_auditor = entity.getPolicy_promotion_auditor();
        if (policy_promotion_auditor != null) {
            stmt.bindString(5, policy_promotion_auditor);
        }
 
        String policy_promotion_cancel_operator = entity.getPolicy_promotion_cancel_operator();
        if (policy_promotion_cancel_operator != null) {
            stmt.bindString(6, policy_promotion_cancel_operator);
        }
 
        String policy_promotion_cancel_time = entity.getPolicy_promotion_cancel_time();
        if (policy_promotion_cancel_time != null) {
            stmt.bindString(7, policy_promotion_cancel_time);
        }
        stmt.bindLong(8, entity.getPolicy_promotion_card_once() ? 1L: 0L);
        stmt.bindLong(9, entity.getPolicy_promotion_card_only() ? 1L: 0L);
 
        String policy_promotion_card_type = entity.getPolicy_promotion_card_type();
        if (policy_promotion_card_type != null) {
            stmt.bindString(10, policy_promotion_card_type);
        }
 
        String policy_promotion_category = entity.getPolicy_promotion_category();
        if (policy_promotion_category != null) {
            stmt.bindString(11, policy_promotion_category);
        }
 
        String policy_promotion_create_time = entity.getPolicy_promotion_create_time();
        if (policy_promotion_create_time != null) {
            stmt.bindString(12, policy_promotion_create_time);
        }
 
        String policy_promotion_creator = entity.getPolicy_promotion_creator();
        if (policy_promotion_creator != null) {
            stmt.bindString(13, policy_promotion_creator);
        }
 
        String policy_promotion_date_from = entity.getPolicy_promotion_date_from();
        if (policy_promotion_date_from != null) {
            stmt.bindString(14, policy_promotion_date_from);
        }
 
        String policy_promotion_date_to = entity.getPolicy_promotion_date_to();
        if (policy_promotion_date_to != null) {
            stmt.bindString(15, policy_promotion_date_to);
        }
        stmt.bindDouble(16, entity.getPolicy_promotion_discount());
 
        String policy_promotion_except_item = entity.getPolicy_promotion_except_item();
        if (policy_promotion_except_item != null) {
            stmt.bindString(17, policy_promotion_except_item);
        }
 
        String policy_promotion_memo = entity.getPolicy_promotion_memo();
        if (policy_promotion_memo != null) {
            stmt.bindString(18, policy_promotion_memo);
        }
        stmt.bindDouble(19, entity.getPolicy_promotion_rate());
 
        String policy_promotion_time_from = entity.getPolicy_promotion_time_from();
        if (policy_promotion_time_from != null) {
            stmt.bindString(20, policy_promotion_time_from);
        }
 
        String policy_promotion_time_to = entity.getPolicy_promotion_time_to();
        if (policy_promotion_time_to != null) {
            stmt.bindString(21, policy_promotion_time_to);
        }
        stmt.bindLong(22, entity.getStall_num());
        stmt.bindLong(23, entity.getStall_promotion_all() ? 1L: 0L);
        stmt.bindLong(24, entity.getState_code());
 
        String state_name = entity.getState_name();
        if (state_name != null) {
            stmt.bindString(25, state_name);
        }
 
        String system_book_code = entity.getSystem_book_code();
        if (system_book_code != null) {
            stmt.bindString(26, system_book_code);
        }
 
        String stallList = entity.getStallList();
        if (stallList != null) {
            stmt.bindString(27, stallList);
        }
    }

    @Override
    protected final void attachEntity(StallPromotion entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public StallPromotion readEntity(Cursor cursor, int offset) {
        StallPromotion entity = new StallPromotion( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // policy_promotion_no
            cursor.getInt(offset + 1), // branch_num
            cursor.getInt(offset + 2), // merchant_num
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // policy_promotion_audit_time
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // policy_promotion_auditor
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // policy_promotion_cancel_operator
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // policy_promotion_cancel_time
            cursor.getShort(offset + 7) != 0, // policy_promotion_card_once
            cursor.getShort(offset + 8) != 0, // policy_promotion_card_only
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // policy_promotion_card_type
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // policy_promotion_category
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // policy_promotion_create_time
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // policy_promotion_creator
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // policy_promotion_date_from
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // policy_promotion_date_to
            cursor.getFloat(offset + 15), // policy_promotion_discount
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // policy_promotion_except_item
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // policy_promotion_memo
            cursor.getFloat(offset + 18), // policy_promotion_rate
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // policy_promotion_time_from
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // policy_promotion_time_to
            cursor.getInt(offset + 21), // stall_num
            cursor.getShort(offset + 22) != 0, // stall_promotion_all
            cursor.getInt(offset + 23), // state_code
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // state_name
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // system_book_code
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26) // stallList
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, StallPromotion entity, int offset) {
        entity.setPolicy_promotion_no(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setBranch_num(cursor.getInt(offset + 1));
        entity.setMerchant_num(cursor.getInt(offset + 2));
        entity.setPolicy_promotion_audit_time(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPolicy_promotion_auditor(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPolicy_promotion_cancel_operator(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setPolicy_promotion_cancel_time(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setPolicy_promotion_card_once(cursor.getShort(offset + 7) != 0);
        entity.setPolicy_promotion_card_only(cursor.getShort(offset + 8) != 0);
        entity.setPolicy_promotion_card_type(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setPolicy_promotion_category(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setPolicy_promotion_create_time(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setPolicy_promotion_creator(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setPolicy_promotion_date_from(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setPolicy_promotion_date_to(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setPolicy_promotion_discount(cursor.getFloat(offset + 15));
        entity.setPolicy_promotion_except_item(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setPolicy_promotion_memo(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setPolicy_promotion_rate(cursor.getFloat(offset + 18));
        entity.setPolicy_promotion_time_from(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setPolicy_promotion_time_to(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setStall_num(cursor.getInt(offset + 21));
        entity.setStall_promotion_all(cursor.getShort(offset + 22) != 0);
        entity.setState_code(cursor.getInt(offset + 23));
        entity.setState_name(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setSystem_book_code(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setStallList(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
     }
    
    @Override
    protected final String updateKeyAfterInsert(StallPromotion entity, long rowId) {
        return entity.getPolicy_promotion_no();
    }
    
    @Override
    public String getKey(StallPromotion entity) {
        if(entity != null) {
            return entity.getPolicy_promotion_no();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(StallPromotion entity) {
        return entity.getPolicy_promotion_no() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
