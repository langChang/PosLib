package com.nhsoft.poslib.service.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.nhsoft.poslib.entity.CardDeposit;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "CARD_DEPOSIT".
*/
public class CardDepositDao extends AbstractDao<CardDeposit, Long> {

    public static final String TABLENAME = "CARD_DEPOSIT";

    /**
     * Properties of entity CardDeposit.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "ID");
        public final static Property Deposit_fid = new Property(1, String.class, "deposit_fid", false, "DEPOSIT_FID");
        public final static Property System_book_code = new Property(2, String.class, "system_book_code", false, "SYSTEM_BOOK_CODE");
        public final static Property Branch_num = new Property(3, Integer.class, "branch_num", false, "BRANCH_NUM");
        public final static Property Shift_table_num = new Property(4, Integer.class, "shift_table_num", false, "SHIFT_TABLE_NUM");
        public final static Property Shift_table_bizday = new Property(5, String.class, "shift_table_bizday", false, "SHIFT_TABLE_BIZDAY");
        public final static Property Deposit_cust_num = new Property(6, Integer.class, "deposit_cust_num", false, "DEPOSIT_CUST_NUM");
        public final static Property Deposit_card_type = new Property(7, Integer.class, "deposit_card_type", false, "DEPOSIT_CARD_TYPE");
        public final static Property Deposit_printed_num = new Property(8, String.class, "deposit_printed_num", false, "DEPOSIT_PRINTED_NUM");
        public final static Property Deposit_category = new Property(9, Integer.class, "deposit_category", false, "DEPOSIT_CATEGORY");
        public final static Property Deposit_type = new Property(10, String.class, "deposit_type", false, "DEPOSIT_TYPE");
        public final static Property Deposit_balance = new Property(11, double.class, "deposit_balance", false, "DEPOSIT_BALANCE");
        public final static Property Deposit_cash = new Property(12, double.class, "deposit_cash", false, "DEPOSIT_CASH");
        public final static Property Deposit_money = new Property(13, double.class, "deposit_money", false, "DEPOSIT_MONEY");
        public final static Property Deposit_point = new Property(14, double.class, "deposit_point", false, "DEPOSIT_POINT");
        public final static Property Deposit_invoice = new Property(15, double.class, "deposit_invoice", false, "DEPOSIT_INVOICE");
        public final static Property Deposit_date = new Property(16, String.class, "deposit_date", false, "DEPOSIT_DATE");
        public final static Property Deposit_operator = new Property(17, String.class, "deposit_operator", false, "DEPOSIT_OPERATOR");
        public final static Property Deposit_count = new Property(18, Integer.class, "deposit_count", false, "DEPOSIT_COUNT");
        public final static Property Deposit_payment_type = new Property(19, Integer.class, "deposit_payment_type", false, "DEPOSIT_PAYMENT_TYPE");
        public final static Property Deposit_payment_type_name = new Property(20, String.class, "deposit_payment_type_name", false, "DEPOSIT_PAYMENT_TYPE_NAME");
        public final static Property Deposit_bank_name = new Property(21, String.class, "deposit_bank_name", false, "DEPOSIT_BANK_NAME");
        public final static Property Deposit_billref = new Property(22, String.class, "deposit_billref", false, "DEPOSIT_BILLREF");
        public final static Property Deposit_memo = new Property(23, String.class, "deposit_memo", false, "DEPOSIT_MEMO");
        public final static Property Deposit_start_date = new Property(24, String.class, "deposit_start_date", false, "DEPOSIT_START_DATE");
        public final static Property Deposit_deadline = new Property(25, String.class, "deposit_deadline", false, "DEPOSIT_DEADLINE");
        public final static Property Deposit_physical_num = new Property(26, String.class, "deposit_physical_num", false, "DEPOSIT_PHYSICAL_NUM");
        public final static Property Deposit_cust_name = new Property(27, String.class, "deposit_cust_name", false, "DEPOSIT_CUST_NAME");
        public final static Property Deposit_branch_name = new Property(28, String.class, "deposit_branch_name", false, "DEPOSIT_BRANCH_NAME");
        public final static Property Deposit_balance_detail_num = new Property(29, Integer.class, "deposit_balance_detail_num", false, "DEPOSIT_BALANCE_DETAIL_NUM");
        public final static Property Account_bank_num = new Property(30, Integer.class, "account_bank_num", false, "ACCOUNT_BANK_NUM");
        public final static Property Deposit_machine = new Property(31, String.class, "deposit_machine", false, "DEPOSIT_MACHINE");
        public final static Property Deposit_settlement_flag = new Property(32, Boolean.class, "deposit_settlement_flag", false, "DEPOSIT_SETTLEMENT_FLAG");
        public final static Property Deposit_repealed = new Property(33, Boolean.class, "deposit_repealed", false, "DEPOSIT_REPEALED");
        public final static Property Deposit_notice_flag = new Property(34, Boolean.class, "deposit_notice_flag", false, "DEPOSIT_NOTICE_FLAG");
        public final static Property Deposit_open_id = new Property(35, String.class, "deposit_open_id", false, "DEPOSIT_OPEN_ID");
        public final static Property Client_fid = new Property(36, String.class, "client_fid", false, "CLIENT_FID");
        public final static Property Deposit_anti_fid = new Property(37, String.class, "deposit_anti_fid", false, "DEPOSIT_ANTI_FID");
        public final static Property Deposit_seller = new Property(38, String.class, "deposit_seller", false, "DEPOSIT_SELLER");
        public final static Property Deposit_synch_date = new Property(39, String.class, "deposit_synch_date", false, "DEPOSIT_SYNCH_DATE");
        public final static Property Deposit_source = new Property(40, String.class, "deposit_source", false, "DEPOSIT_SOURCE");
        public final static Property Deposit_old_fid = new Property(41, String.class, "deposit_old_fid", false, "DEPOSIT_OLD_FID");
        public final static Property Card_print_num = new Property(42, String.class, "card_print_num", false, "CARD_PRINT_NUM");
        public final static Property Card_phone = new Property(43, String.class, "card_phone", false, "CARD_PHONE");
        public final static Property Card_type = new Property(44, String.class, "card_type", false, "CARD_TYPE");
        public final static Property Deposit_crypt = new Property(45, String.class, "deposit_crypt", false, "DEPOSIT_CRYPT");
        public final static Property From_pos = new Property(46, Boolean.class, "from_pos", false, "FROM_POS");
        public final static Property Re_send_fid = new Property(47, String.class, "re_send_fid", false, "RE_SEND_FID");
    }


    public CardDepositDao(DaoConfig config) {
        super(config);
    }
    
    public CardDepositDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CARD_DEPOSIT\" (" + //
                "\"ID\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"DEPOSIT_FID\" TEXT," + // 1: deposit_fid
                "\"SYSTEM_BOOK_CODE\" TEXT," + // 2: system_book_code
                "\"BRANCH_NUM\" INTEGER," + // 3: branch_num
                "\"SHIFT_TABLE_NUM\" INTEGER," + // 4: shift_table_num
                "\"SHIFT_TABLE_BIZDAY\" TEXT," + // 5: shift_table_bizday
                "\"DEPOSIT_CUST_NUM\" INTEGER," + // 6: deposit_cust_num
                "\"DEPOSIT_CARD_TYPE\" INTEGER," + // 7: deposit_card_type
                "\"DEPOSIT_PRINTED_NUM\" TEXT," + // 8: deposit_printed_num
                "\"DEPOSIT_CATEGORY\" INTEGER," + // 9: deposit_category
                "\"DEPOSIT_TYPE\" TEXT," + // 10: deposit_type
                "\"DEPOSIT_BALANCE\" REAL NOT NULL ," + // 11: deposit_balance
                "\"DEPOSIT_CASH\" REAL NOT NULL ," + // 12: deposit_cash
                "\"DEPOSIT_MONEY\" REAL NOT NULL ," + // 13: deposit_money
                "\"DEPOSIT_POINT\" REAL NOT NULL ," + // 14: deposit_point
                "\"DEPOSIT_INVOICE\" REAL NOT NULL ," + // 15: deposit_invoice
                "\"DEPOSIT_DATE\" TEXT," + // 16: deposit_date
                "\"DEPOSIT_OPERATOR\" TEXT," + // 17: deposit_operator
                "\"DEPOSIT_COUNT\" INTEGER," + // 18: deposit_count
                "\"DEPOSIT_PAYMENT_TYPE\" INTEGER," + // 19: deposit_payment_type
                "\"DEPOSIT_PAYMENT_TYPE_NAME\" TEXT," + // 20: deposit_payment_type_name
                "\"DEPOSIT_BANK_NAME\" TEXT," + // 21: deposit_bank_name
                "\"DEPOSIT_BILLREF\" TEXT," + // 22: deposit_billref
                "\"DEPOSIT_MEMO\" TEXT," + // 23: deposit_memo
                "\"DEPOSIT_START_DATE\" TEXT," + // 24: deposit_start_date
                "\"DEPOSIT_DEADLINE\" TEXT," + // 25: deposit_deadline
                "\"DEPOSIT_PHYSICAL_NUM\" TEXT," + // 26: deposit_physical_num
                "\"DEPOSIT_CUST_NAME\" TEXT," + // 27: deposit_cust_name
                "\"DEPOSIT_BRANCH_NAME\" TEXT," + // 28: deposit_branch_name
                "\"DEPOSIT_BALANCE_DETAIL_NUM\" INTEGER," + // 29: deposit_balance_detail_num
                "\"ACCOUNT_BANK_NUM\" INTEGER," + // 30: account_bank_num
                "\"DEPOSIT_MACHINE\" TEXT," + // 31: deposit_machine
                "\"DEPOSIT_SETTLEMENT_FLAG\" INTEGER," + // 32: deposit_settlement_flag
                "\"DEPOSIT_REPEALED\" INTEGER," + // 33: deposit_repealed
                "\"DEPOSIT_NOTICE_FLAG\" INTEGER," + // 34: deposit_notice_flag
                "\"DEPOSIT_OPEN_ID\" TEXT," + // 35: deposit_open_id
                "\"CLIENT_FID\" TEXT," + // 36: client_fid
                "\"DEPOSIT_ANTI_FID\" TEXT," + // 37: deposit_anti_fid
                "\"DEPOSIT_SELLER\" TEXT," + // 38: deposit_seller
                "\"DEPOSIT_SYNCH_DATE\" TEXT," + // 39: deposit_synch_date
                "\"DEPOSIT_SOURCE\" TEXT," + // 40: deposit_source
                "\"DEPOSIT_OLD_FID\" TEXT," + // 41: deposit_old_fid
                "\"CARD_PRINT_NUM\" TEXT," + // 42: card_print_num
                "\"CARD_PHONE\" TEXT," + // 43: card_phone
                "\"CARD_TYPE\" TEXT," + // 44: card_type
                "\"DEPOSIT_CRYPT\" TEXT," + // 45: deposit_crypt
                "\"FROM_POS\" INTEGER," + // 46: from_pos
                "\"RE_SEND_FID\" TEXT);"); // 47: re_send_fid
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CARD_DEPOSIT\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, CardDeposit entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String deposit_fid = entity.getDeposit_fid();
        if (deposit_fid != null) {
            stmt.bindString(2, deposit_fid);
        }
 
        String system_book_code = entity.getSystem_book_code();
        if (system_book_code != null) {
            stmt.bindString(3, system_book_code);
        }
 
        Integer branch_num = entity.getBranch_num();
        if (branch_num != null) {
            stmt.bindLong(4, branch_num);
        }
 
        Integer shift_table_num = entity.getShift_table_num();
        if (shift_table_num != null) {
            stmt.bindLong(5, shift_table_num);
        }
 
        String shift_table_bizday = entity.getShift_table_bizday();
        if (shift_table_bizday != null) {
            stmt.bindString(6, shift_table_bizday);
        }
 
        Integer deposit_cust_num = entity.getDeposit_cust_num();
        if (deposit_cust_num != null) {
            stmt.bindLong(7, deposit_cust_num);
        }
 
        Integer deposit_card_type = entity.getDeposit_card_type();
        if (deposit_card_type != null) {
            stmt.bindLong(8, deposit_card_type);
        }
 
        String deposit_printed_num = entity.getDeposit_printed_num();
        if (deposit_printed_num != null) {
            stmt.bindString(9, deposit_printed_num);
        }
 
        Integer deposit_category = entity.getDeposit_category();
        if (deposit_category != null) {
            stmt.bindLong(10, deposit_category);
        }
 
        String deposit_type = entity.getDeposit_type();
        if (deposit_type != null) {
            stmt.bindString(11, deposit_type);
        }
        stmt.bindDouble(12, entity.getDeposit_balance());
        stmt.bindDouble(13, entity.getDeposit_cash());
        stmt.bindDouble(14, entity.getDeposit_money());
        stmt.bindDouble(15, entity.getDeposit_point());
        stmt.bindDouble(16, entity.getDeposit_invoice());
 
        String deposit_date = entity.getDeposit_date();
        if (deposit_date != null) {
            stmt.bindString(17, deposit_date);
        }
 
        String deposit_operator = entity.getDeposit_operator();
        if (deposit_operator != null) {
            stmt.bindString(18, deposit_operator);
        }
 
        Integer deposit_count = entity.getDeposit_count();
        if (deposit_count != null) {
            stmt.bindLong(19, deposit_count);
        }
 
        Integer deposit_payment_type = entity.getDeposit_payment_type();
        if (deposit_payment_type != null) {
            stmt.bindLong(20, deposit_payment_type);
        }
 
        String deposit_payment_type_name = entity.getDeposit_payment_type_name();
        if (deposit_payment_type_name != null) {
            stmt.bindString(21, deposit_payment_type_name);
        }
 
        String deposit_bank_name = entity.getDeposit_bank_name();
        if (deposit_bank_name != null) {
            stmt.bindString(22, deposit_bank_name);
        }
 
        String deposit_billref = entity.getDeposit_billref();
        if (deposit_billref != null) {
            stmt.bindString(23, deposit_billref);
        }
 
        String deposit_memo = entity.getDeposit_memo();
        if (deposit_memo != null) {
            stmt.bindString(24, deposit_memo);
        }
 
        String deposit_start_date = entity.getDeposit_start_date();
        if (deposit_start_date != null) {
            stmt.bindString(25, deposit_start_date);
        }
 
        String deposit_deadline = entity.getDeposit_deadline();
        if (deposit_deadline != null) {
            stmt.bindString(26, deposit_deadline);
        }
 
        String deposit_physical_num = entity.getDeposit_physical_num();
        if (deposit_physical_num != null) {
            stmt.bindString(27, deposit_physical_num);
        }
 
        String deposit_cust_name = entity.getDeposit_cust_name();
        if (deposit_cust_name != null) {
            stmt.bindString(28, deposit_cust_name);
        }
 
        String deposit_branch_name = entity.getDeposit_branch_name();
        if (deposit_branch_name != null) {
            stmt.bindString(29, deposit_branch_name);
        }
 
        Integer deposit_balance_detail_num = entity.getDeposit_balance_detail_num();
        if (deposit_balance_detail_num != null) {
            stmt.bindLong(30, deposit_balance_detail_num);
        }
 
        Integer account_bank_num = entity.getAccount_bank_num();
        if (account_bank_num != null) {
            stmt.bindLong(31, account_bank_num);
        }
 
        String deposit_machine = entity.getDeposit_machine();
        if (deposit_machine != null) {
            stmt.bindString(32, deposit_machine);
        }
 
        Boolean deposit_settlement_flag = entity.getDeposit_settlement_flag();
        if (deposit_settlement_flag != null) {
            stmt.bindLong(33, deposit_settlement_flag ? 1L: 0L);
        }
 
        Boolean deposit_repealed = entity.getDeposit_repealed();
        if (deposit_repealed != null) {
            stmt.bindLong(34, deposit_repealed ? 1L: 0L);
        }
 
        Boolean deposit_notice_flag = entity.getDeposit_notice_flag();
        if (deposit_notice_flag != null) {
            stmt.bindLong(35, deposit_notice_flag ? 1L: 0L);
        }
 
        String deposit_open_id = entity.getDeposit_open_id();
        if (deposit_open_id != null) {
            stmt.bindString(36, deposit_open_id);
        }
 
        String client_fid = entity.getClient_fid();
        if (client_fid != null) {
            stmt.bindString(37, client_fid);
        }
 
        String deposit_anti_fid = entity.getDeposit_anti_fid();
        if (deposit_anti_fid != null) {
            stmt.bindString(38, deposit_anti_fid);
        }
 
        String deposit_seller = entity.getDeposit_seller();
        if (deposit_seller != null) {
            stmt.bindString(39, deposit_seller);
        }
 
        String deposit_synch_date = entity.getDeposit_synch_date();
        if (deposit_synch_date != null) {
            stmt.bindString(40, deposit_synch_date);
        }
 
        String deposit_source = entity.getDeposit_source();
        if (deposit_source != null) {
            stmt.bindString(41, deposit_source);
        }
 
        String deposit_old_fid = entity.getDeposit_old_fid();
        if (deposit_old_fid != null) {
            stmt.bindString(42, deposit_old_fid);
        }
 
        String card_print_num = entity.getCard_print_num();
        if (card_print_num != null) {
            stmt.bindString(43, card_print_num);
        }
 
        String card_phone = entity.getCard_phone();
        if (card_phone != null) {
            stmt.bindString(44, card_phone);
        }
 
        String card_type = entity.getCard_type();
        if (card_type != null) {
            stmt.bindString(45, card_type);
        }
 
        String deposit_crypt = entity.getDeposit_crypt();
        if (deposit_crypt != null) {
            stmt.bindString(46, deposit_crypt);
        }
 
        Boolean from_pos = entity.getFrom_pos();
        if (from_pos != null) {
            stmt.bindLong(47, from_pos ? 1L: 0L);
        }
 
        String re_send_fid = entity.getRe_send_fid();
        if (re_send_fid != null) {
            stmt.bindString(48, re_send_fid);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, CardDeposit entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String deposit_fid = entity.getDeposit_fid();
        if (deposit_fid != null) {
            stmt.bindString(2, deposit_fid);
        }
 
        String system_book_code = entity.getSystem_book_code();
        if (system_book_code != null) {
            stmt.bindString(3, system_book_code);
        }
 
        Integer branch_num = entity.getBranch_num();
        if (branch_num != null) {
            stmt.bindLong(4, branch_num);
        }
 
        Integer shift_table_num = entity.getShift_table_num();
        if (shift_table_num != null) {
            stmt.bindLong(5, shift_table_num);
        }
 
        String shift_table_bizday = entity.getShift_table_bizday();
        if (shift_table_bizday != null) {
            stmt.bindString(6, shift_table_bizday);
        }
 
        Integer deposit_cust_num = entity.getDeposit_cust_num();
        if (deposit_cust_num != null) {
            stmt.bindLong(7, deposit_cust_num);
        }
 
        Integer deposit_card_type = entity.getDeposit_card_type();
        if (deposit_card_type != null) {
            stmt.bindLong(8, deposit_card_type);
        }
 
        String deposit_printed_num = entity.getDeposit_printed_num();
        if (deposit_printed_num != null) {
            stmt.bindString(9, deposit_printed_num);
        }
 
        Integer deposit_category = entity.getDeposit_category();
        if (deposit_category != null) {
            stmt.bindLong(10, deposit_category);
        }
 
        String deposit_type = entity.getDeposit_type();
        if (deposit_type != null) {
            stmt.bindString(11, deposit_type);
        }
        stmt.bindDouble(12, entity.getDeposit_balance());
        stmt.bindDouble(13, entity.getDeposit_cash());
        stmt.bindDouble(14, entity.getDeposit_money());
        stmt.bindDouble(15, entity.getDeposit_point());
        stmt.bindDouble(16, entity.getDeposit_invoice());
 
        String deposit_date = entity.getDeposit_date();
        if (deposit_date != null) {
            stmt.bindString(17, deposit_date);
        }
 
        String deposit_operator = entity.getDeposit_operator();
        if (deposit_operator != null) {
            stmt.bindString(18, deposit_operator);
        }
 
        Integer deposit_count = entity.getDeposit_count();
        if (deposit_count != null) {
            stmt.bindLong(19, deposit_count);
        }
 
        Integer deposit_payment_type = entity.getDeposit_payment_type();
        if (deposit_payment_type != null) {
            stmt.bindLong(20, deposit_payment_type);
        }
 
        String deposit_payment_type_name = entity.getDeposit_payment_type_name();
        if (deposit_payment_type_name != null) {
            stmt.bindString(21, deposit_payment_type_name);
        }
 
        String deposit_bank_name = entity.getDeposit_bank_name();
        if (deposit_bank_name != null) {
            stmt.bindString(22, deposit_bank_name);
        }
 
        String deposit_billref = entity.getDeposit_billref();
        if (deposit_billref != null) {
            stmt.bindString(23, deposit_billref);
        }
 
        String deposit_memo = entity.getDeposit_memo();
        if (deposit_memo != null) {
            stmt.bindString(24, deposit_memo);
        }
 
        String deposit_start_date = entity.getDeposit_start_date();
        if (deposit_start_date != null) {
            stmt.bindString(25, deposit_start_date);
        }
 
        String deposit_deadline = entity.getDeposit_deadline();
        if (deposit_deadline != null) {
            stmt.bindString(26, deposit_deadline);
        }
 
        String deposit_physical_num = entity.getDeposit_physical_num();
        if (deposit_physical_num != null) {
            stmt.bindString(27, deposit_physical_num);
        }
 
        String deposit_cust_name = entity.getDeposit_cust_name();
        if (deposit_cust_name != null) {
            stmt.bindString(28, deposit_cust_name);
        }
 
        String deposit_branch_name = entity.getDeposit_branch_name();
        if (deposit_branch_name != null) {
            stmt.bindString(29, deposit_branch_name);
        }
 
        Integer deposit_balance_detail_num = entity.getDeposit_balance_detail_num();
        if (deposit_balance_detail_num != null) {
            stmt.bindLong(30, deposit_balance_detail_num);
        }
 
        Integer account_bank_num = entity.getAccount_bank_num();
        if (account_bank_num != null) {
            stmt.bindLong(31, account_bank_num);
        }
 
        String deposit_machine = entity.getDeposit_machine();
        if (deposit_machine != null) {
            stmt.bindString(32, deposit_machine);
        }
 
        Boolean deposit_settlement_flag = entity.getDeposit_settlement_flag();
        if (deposit_settlement_flag != null) {
            stmt.bindLong(33, deposit_settlement_flag ? 1L: 0L);
        }
 
        Boolean deposit_repealed = entity.getDeposit_repealed();
        if (deposit_repealed != null) {
            stmt.bindLong(34, deposit_repealed ? 1L: 0L);
        }
 
        Boolean deposit_notice_flag = entity.getDeposit_notice_flag();
        if (deposit_notice_flag != null) {
            stmt.bindLong(35, deposit_notice_flag ? 1L: 0L);
        }
 
        String deposit_open_id = entity.getDeposit_open_id();
        if (deposit_open_id != null) {
            stmt.bindString(36, deposit_open_id);
        }
 
        String client_fid = entity.getClient_fid();
        if (client_fid != null) {
            stmt.bindString(37, client_fid);
        }
 
        String deposit_anti_fid = entity.getDeposit_anti_fid();
        if (deposit_anti_fid != null) {
            stmt.bindString(38, deposit_anti_fid);
        }
 
        String deposit_seller = entity.getDeposit_seller();
        if (deposit_seller != null) {
            stmt.bindString(39, deposit_seller);
        }
 
        String deposit_synch_date = entity.getDeposit_synch_date();
        if (deposit_synch_date != null) {
            stmt.bindString(40, deposit_synch_date);
        }
 
        String deposit_source = entity.getDeposit_source();
        if (deposit_source != null) {
            stmt.bindString(41, deposit_source);
        }
 
        String deposit_old_fid = entity.getDeposit_old_fid();
        if (deposit_old_fid != null) {
            stmt.bindString(42, deposit_old_fid);
        }
 
        String card_print_num = entity.getCard_print_num();
        if (card_print_num != null) {
            stmt.bindString(43, card_print_num);
        }
 
        String card_phone = entity.getCard_phone();
        if (card_phone != null) {
            stmt.bindString(44, card_phone);
        }
 
        String card_type = entity.getCard_type();
        if (card_type != null) {
            stmt.bindString(45, card_type);
        }
 
        String deposit_crypt = entity.getDeposit_crypt();
        if (deposit_crypt != null) {
            stmt.bindString(46, deposit_crypt);
        }
 
        Boolean from_pos = entity.getFrom_pos();
        if (from_pos != null) {
            stmt.bindLong(47, from_pos ? 1L: 0L);
        }
 
        String re_send_fid = entity.getRe_send_fid();
        if (re_send_fid != null) {
            stmt.bindString(48, re_send_fid);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public CardDeposit readEntity(Cursor cursor, int offset) {
        CardDeposit entity = new CardDeposit( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // deposit_fid
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // system_book_code
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // branch_num
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // shift_table_num
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // shift_table_bizday
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // deposit_cust_num
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // deposit_card_type
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // deposit_printed_num
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // deposit_category
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // deposit_type
            cursor.getDouble(offset + 11), // deposit_balance
            cursor.getDouble(offset + 12), // deposit_cash
            cursor.getDouble(offset + 13), // deposit_money
            cursor.getDouble(offset + 14), // deposit_point
            cursor.getDouble(offset + 15), // deposit_invoice
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // deposit_date
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // deposit_operator
            cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // deposit_count
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // deposit_payment_type
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // deposit_payment_type_name
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // deposit_bank_name
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // deposit_billref
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // deposit_memo
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // deposit_start_date
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // deposit_deadline
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // deposit_physical_num
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // deposit_cust_name
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // deposit_branch_name
            cursor.isNull(offset + 29) ? null : cursor.getInt(offset + 29), // deposit_balance_detail_num
            cursor.isNull(offset + 30) ? null : cursor.getInt(offset + 30), // account_bank_num
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // deposit_machine
            cursor.isNull(offset + 32) ? null : cursor.getShort(offset + 32) != 0, // deposit_settlement_flag
            cursor.isNull(offset + 33) ? null : cursor.getShort(offset + 33) != 0, // deposit_repealed
            cursor.isNull(offset + 34) ? null : cursor.getShort(offset + 34) != 0, // deposit_notice_flag
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // deposit_open_id
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // client_fid
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // deposit_anti_fid
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // deposit_seller
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // deposit_synch_date
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // deposit_source
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // deposit_old_fid
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // card_print_num
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // card_phone
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // card_type
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // deposit_crypt
            cursor.isNull(offset + 46) ? null : cursor.getShort(offset + 46) != 0, // from_pos
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47) // re_send_fid
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, CardDeposit entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setDeposit_fid(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setSystem_book_code(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setBranch_num(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setShift_table_num(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setShift_table_bizday(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setDeposit_cust_num(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setDeposit_card_type(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setDeposit_printed_num(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setDeposit_category(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setDeposit_type(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setDeposit_balance(cursor.getDouble(offset + 11));
        entity.setDeposit_cash(cursor.getDouble(offset + 12));
        entity.setDeposit_money(cursor.getDouble(offset + 13));
        entity.setDeposit_point(cursor.getDouble(offset + 14));
        entity.setDeposit_invoice(cursor.getDouble(offset + 15));
        entity.setDeposit_date(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setDeposit_operator(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setDeposit_count(cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18));
        entity.setDeposit_payment_type(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setDeposit_payment_type_name(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setDeposit_bank_name(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setDeposit_billref(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setDeposit_memo(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setDeposit_start_date(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setDeposit_deadline(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setDeposit_physical_num(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setDeposit_cust_name(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setDeposit_branch_name(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setDeposit_balance_detail_num(cursor.isNull(offset + 29) ? null : cursor.getInt(offset + 29));
        entity.setAccount_bank_num(cursor.isNull(offset + 30) ? null : cursor.getInt(offset + 30));
        entity.setDeposit_machine(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setDeposit_settlement_flag(cursor.isNull(offset + 32) ? null : cursor.getShort(offset + 32) != 0);
        entity.setDeposit_repealed(cursor.isNull(offset + 33) ? null : cursor.getShort(offset + 33) != 0);
        entity.setDeposit_notice_flag(cursor.isNull(offset + 34) ? null : cursor.getShort(offset + 34) != 0);
        entity.setDeposit_open_id(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setClient_fid(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setDeposit_anti_fid(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setDeposit_seller(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setDeposit_synch_date(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setDeposit_source(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setDeposit_old_fid(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setCard_print_num(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setCard_phone(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setCard_type(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setDeposit_crypt(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setFrom_pos(cursor.isNull(offset + 46) ? null : cursor.getShort(offset + 46) != 0);
        entity.setRe_send_fid(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(CardDeposit entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(CardDeposit entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(CardDeposit entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
