package com.nhsoft.poslib.service.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.nhsoft.poslib.entity.PolicyPromotion;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "POLICY_PROMOTION".
*/
public class PolicyPromotionDao extends AbstractDao<PolicyPromotion, String> {

    public static final String TABLENAME = "POLICY_PROMOTION";

    /**
     * Properties of entity PolicyPromotion.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Policy_promotion_no = new Property(0, String.class, "policy_promotion_no", true, "POLICY_PROMOTION_NO");
        public final static Property Policy_promotion_date_from = new Property(1, String.class, "policy_promotion_date_from", false, "POLICY_PROMOTION_DATE_FROM");
        public final static Property Policy_promotion_date_to = new Property(2, String.class, "policy_promotion_date_to", false, "POLICY_PROMOTION_DATE_TO");
        public final static Property Policy_promotion_time_from = new Property(3, String.class, "policy_promotion_time_from", false, "POLICY_PROMOTION_TIME_FROM");
        public final static Property Policy_promotion_time_to = new Property(4, String.class, "policy_promotion_time_to", false, "POLICY_PROMOTION_TIME_TO");
        public final static Property Policy_promotion_applied_branch = new Property(5, String.class, "policy_promotion_applied_branch", false, "POLICY_PROMOTION_APPLIED_BRANCH");
        public final static Property Policy_promotion_mon_actived = new Property(6, boolean.class, "policy_promotion_mon_actived", false, "POLICY_PROMOTION_MON_ACTIVED");
        public final static Property Policy_promotion_tues_actived = new Property(7, boolean.class, "policy_promotion_tues_actived", false, "POLICY_PROMOTION_TUES_ACTIVED");
        public final static Property Policy_promotion_wed_actived = new Property(8, boolean.class, "policy_promotion_wed_actived", false, "POLICY_PROMOTION_WED_ACTIVED");
        public final static Property Policy_promotion_thurs_actived = new Property(9, boolean.class, "policy_promotion_thurs_actived", false, "POLICY_PROMOTION_THURS_ACTIVED");
        public final static Property Policy_promotion_friday_actived = new Property(10, boolean.class, "policy_promotion_friday_actived", false, "POLICY_PROMOTION_FRIDAY_ACTIVED");
        public final static Property Policy_promotion_sat_actived = new Property(11, boolean.class, "policy_promotion_sat_actived", false, "POLICY_PROMOTION_SAT_ACTIVED");
        public final static Property Policy_promotion_sun_actived = new Property(12, boolean.class, "policy_promotion_sun_actived", false, "POLICY_PROMOTION_SUN_ACTIVED");
        public final static Property Policy_promotion_state_code = new Property(13, int.class, "policy_promotion_state_code", false, "POLICY_PROMOTION_STATE_CODE");
        public final static Property Policy_promotion_state_name = new Property(14, String.class, "policy_promotion_state_name", false, "POLICY_PROMOTION_STATE_NAME");
        public final static Property Policy_promotion_create_time = new Property(15, String.class, "policy_promotion_create_time", false, "POLICY_PROMOTION_CREATE_TIME");
        public final static Property Policy_promotion_creator = new Property(16, String.class, "policy_promotion_creator", false, "POLICY_PROMOTION_CREATOR");
        public final static Property Policy_promotion_audit_time = new Property(17, String.class, "policy_promotion_audit_time", false, "POLICY_PROMOTION_AUDIT_TIME");
        public final static Property Policy_promotion_auditor = new Property(18, String.class, "policy_promotion_auditor", false, "POLICY_PROMOTION_AUDITOR");
        public final static Property Policy_promotion_memo = new Property(19, String.class, "policy_promotion_memo", false, "POLICY_PROMOTION_MEMO");
        public final static Property Policy_promotion_cancel_time = new Property(20, String.class, "policy_promotion_cancel_time", false, "POLICY_PROMOTION_CANCEL_TIME");
        public final static Property Policy_promotion_cancel_operator = new Property(21, String.class, "policy_promotion_cancel_operator", false, "POLICY_PROMOTION_CANCEL_OPERATOR");
        public final static Property Branch_num = new Property(22, int.class, "branch_num", false, "BRANCH_NUM");
        public final static Property Policy_promotion_card_only = new Property(23, boolean.class, "policy_promotion_card_only", false, "POLICY_PROMOTION_CARD_ONLY");
        public final static Property Policy_promotion_type = new Property(24, int.class, "policy_promotion_type", false, "POLICY_PROMOTION_TYPE");
        public final static Property Policy_promotion_all = new Property(25, boolean.class, "policy_promotion_all", false, "POLICY_PROMOTION_ALL");
        public final static Property Policy_promotion_discount = new Property(26, double.class, "policy_promotion_discount", false, "POLICY_PROMOTION_DISCOUNT");
        public final static Property Policy_promotion_card_type = new Property(27, String.class, "policy_promotion_card_type", false, "POLICY_PROMOTION_CARD_TYPE");
        public final static Property Policy_promotion_repeat_type = new Property(28, String.class, "policy_promotion_repeat_type", false, "POLICY_PROMOTION_REPEAT_TYPE");
        public final static Property Policy_promotion_repeat_end = new Property(29, String.class, "policy_promotion_repeat_end", false, "POLICY_PROMOTION_REPEAT_END");
        public final static Property Policy_promotion_except_item = new Property(30, String.class, "policy_promotion_except_item", false, "POLICY_PROMOTION_EXCEPT_ITEM");
        public final static Property Policy_promotion_category = new Property(31, String.class, "policy_promotion_category", false, "POLICY_PROMOTION_CATEGORY");
        public final static Property Policy_promotion_item_category = new Property(32, String.class, "policy_promotion_item_category", false, "POLICY_PROMOTION_ITEM_CATEGORY");
        public final static Property Policy_promotion_disable_pay_discount = new Property(33, boolean.class, "policy_promotion_disable_pay_discount", false, "POLICY_PROMOTION_DISABLE_PAY_DISCOUNT");
        public final static Property Policy_promotion_card_once = new Property(34, boolean.class, "policy_promotion_card_once", false, "POLICY_PROMOTION_CARD_ONCE");
        public final static Property Policy_promotion_last_edit_time = new Property(35, String.class, "policy_promotion_last_edit_time", false, "POLICY_PROMOTION_LAST_EDIT_TIME");
        public final static Property Policy_promotion_last_editor = new Property(36, String.class, "policy_promotion_last_editor", false, "POLICY_PROMOTION_LAST_EDITOR");
        public final static Property Policy_promotion_total_limit = new Property(37, Integer.class, "policy_promotion_total_limit", false, "POLICY_PROMOTION_TOTAL_LIMIT");
        public final static Property Policy_promotion_level_ids = new Property(38, String.class, "policy_promotion_level_ids", false, "POLICY_PROMOTION_LEVEL_IDS");
    }

    private DaoSession daoSession;


    public PolicyPromotionDao(DaoConfig config) {
        super(config);
    }
    
    public PolicyPromotionDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"POLICY_PROMOTION\" (" + //
                "\"POLICY_PROMOTION_NO\" TEXT PRIMARY KEY NOT NULL ," + // 0: policy_promotion_no
                "\"POLICY_PROMOTION_DATE_FROM\" TEXT," + // 1: policy_promotion_date_from
                "\"POLICY_PROMOTION_DATE_TO\" TEXT," + // 2: policy_promotion_date_to
                "\"POLICY_PROMOTION_TIME_FROM\" TEXT," + // 3: policy_promotion_time_from
                "\"POLICY_PROMOTION_TIME_TO\" TEXT," + // 4: policy_promotion_time_to
                "\"POLICY_PROMOTION_APPLIED_BRANCH\" TEXT," + // 5: policy_promotion_applied_branch
                "\"POLICY_PROMOTION_MON_ACTIVED\" INTEGER NOT NULL ," + // 6: policy_promotion_mon_actived
                "\"POLICY_PROMOTION_TUES_ACTIVED\" INTEGER NOT NULL ," + // 7: policy_promotion_tues_actived
                "\"POLICY_PROMOTION_WED_ACTIVED\" INTEGER NOT NULL ," + // 8: policy_promotion_wed_actived
                "\"POLICY_PROMOTION_THURS_ACTIVED\" INTEGER NOT NULL ," + // 9: policy_promotion_thurs_actived
                "\"POLICY_PROMOTION_FRIDAY_ACTIVED\" INTEGER NOT NULL ," + // 10: policy_promotion_friday_actived
                "\"POLICY_PROMOTION_SAT_ACTIVED\" INTEGER NOT NULL ," + // 11: policy_promotion_sat_actived
                "\"POLICY_PROMOTION_SUN_ACTIVED\" INTEGER NOT NULL ," + // 12: policy_promotion_sun_actived
                "\"POLICY_PROMOTION_STATE_CODE\" INTEGER NOT NULL ," + // 13: policy_promotion_state_code
                "\"POLICY_PROMOTION_STATE_NAME\" TEXT," + // 14: policy_promotion_state_name
                "\"POLICY_PROMOTION_CREATE_TIME\" TEXT," + // 15: policy_promotion_create_time
                "\"POLICY_PROMOTION_CREATOR\" TEXT," + // 16: policy_promotion_creator
                "\"POLICY_PROMOTION_AUDIT_TIME\" TEXT," + // 17: policy_promotion_audit_time
                "\"POLICY_PROMOTION_AUDITOR\" TEXT," + // 18: policy_promotion_auditor
                "\"POLICY_PROMOTION_MEMO\" TEXT," + // 19: policy_promotion_memo
                "\"POLICY_PROMOTION_CANCEL_TIME\" TEXT," + // 20: policy_promotion_cancel_time
                "\"POLICY_PROMOTION_CANCEL_OPERATOR\" TEXT," + // 21: policy_promotion_cancel_operator
                "\"BRANCH_NUM\" INTEGER NOT NULL ," + // 22: branch_num
                "\"POLICY_PROMOTION_CARD_ONLY\" INTEGER NOT NULL ," + // 23: policy_promotion_card_only
                "\"POLICY_PROMOTION_TYPE\" INTEGER NOT NULL ," + // 24: policy_promotion_type
                "\"POLICY_PROMOTION_ALL\" INTEGER NOT NULL ," + // 25: policy_promotion_all
                "\"POLICY_PROMOTION_DISCOUNT\" REAL NOT NULL ," + // 26: policy_promotion_discount
                "\"POLICY_PROMOTION_CARD_TYPE\" TEXT," + // 27: policy_promotion_card_type
                "\"POLICY_PROMOTION_REPEAT_TYPE\" TEXT," + // 28: policy_promotion_repeat_type
                "\"POLICY_PROMOTION_REPEAT_END\" TEXT," + // 29: policy_promotion_repeat_end
                "\"POLICY_PROMOTION_EXCEPT_ITEM\" TEXT," + // 30: policy_promotion_except_item
                "\"POLICY_PROMOTION_CATEGORY\" TEXT," + // 31: policy_promotion_category
                "\"POLICY_PROMOTION_ITEM_CATEGORY\" TEXT," + // 32: policy_promotion_item_category
                "\"POLICY_PROMOTION_DISABLE_PAY_DISCOUNT\" INTEGER NOT NULL ," + // 33: policy_promotion_disable_pay_discount
                "\"POLICY_PROMOTION_CARD_ONCE\" INTEGER NOT NULL ," + // 34: policy_promotion_card_once
                "\"POLICY_PROMOTION_LAST_EDIT_TIME\" TEXT," + // 35: policy_promotion_last_edit_time
                "\"POLICY_PROMOTION_LAST_EDITOR\" TEXT," + // 36: policy_promotion_last_editor
                "\"POLICY_PROMOTION_TOTAL_LIMIT\" INTEGER," + // 37: policy_promotion_total_limit
                "\"POLICY_PROMOTION_LEVEL_IDS\" TEXT);"); // 38: policy_promotion_level_ids
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"POLICY_PROMOTION\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, PolicyPromotion entity) {
        stmt.clearBindings();
 
        String policy_promotion_no = entity.getPolicy_promotion_no();
        if (policy_promotion_no != null) {
            stmt.bindString(1, policy_promotion_no);
        }
 
        String policy_promotion_date_from = entity.getPolicy_promotion_date_from();
        if (policy_promotion_date_from != null) {
            stmt.bindString(2, policy_promotion_date_from);
        }
 
        String policy_promotion_date_to = entity.getPolicy_promotion_date_to();
        if (policy_promotion_date_to != null) {
            stmt.bindString(3, policy_promotion_date_to);
        }
 
        String policy_promotion_time_from = entity.getPolicy_promotion_time_from();
        if (policy_promotion_time_from != null) {
            stmt.bindString(4, policy_promotion_time_from);
        }
 
        String policy_promotion_time_to = entity.getPolicy_promotion_time_to();
        if (policy_promotion_time_to != null) {
            stmt.bindString(5, policy_promotion_time_to);
        }
 
        String policy_promotion_applied_branch = entity.getPolicy_promotion_applied_branch();
        if (policy_promotion_applied_branch != null) {
            stmt.bindString(6, policy_promotion_applied_branch);
        }
        stmt.bindLong(7, entity.getPolicy_promotion_mon_actived() ? 1L: 0L);
        stmt.bindLong(8, entity.getPolicy_promotion_tues_actived() ? 1L: 0L);
        stmt.bindLong(9, entity.getPolicy_promotion_wed_actived() ? 1L: 0L);
        stmt.bindLong(10, entity.getPolicy_promotion_thurs_actived() ? 1L: 0L);
        stmt.bindLong(11, entity.getPolicy_promotion_friday_actived() ? 1L: 0L);
        stmt.bindLong(12, entity.getPolicy_promotion_sat_actived() ? 1L: 0L);
        stmt.bindLong(13, entity.getPolicy_promotion_sun_actived() ? 1L: 0L);
        stmt.bindLong(14, entity.getPolicy_promotion_state_code());
 
        String policy_promotion_state_name = entity.getPolicy_promotion_state_name();
        if (policy_promotion_state_name != null) {
            stmt.bindString(15, policy_promotion_state_name);
        }
 
        String policy_promotion_create_time = entity.getPolicy_promotion_create_time();
        if (policy_promotion_create_time != null) {
            stmt.bindString(16, policy_promotion_create_time);
        }
 
        String policy_promotion_creator = entity.getPolicy_promotion_creator();
        if (policy_promotion_creator != null) {
            stmt.bindString(17, policy_promotion_creator);
        }
 
        String policy_promotion_audit_time = entity.getPolicy_promotion_audit_time();
        if (policy_promotion_audit_time != null) {
            stmt.bindString(18, policy_promotion_audit_time);
        }
 
        String policy_promotion_auditor = entity.getPolicy_promotion_auditor();
        if (policy_promotion_auditor != null) {
            stmt.bindString(19, policy_promotion_auditor);
        }
 
        String policy_promotion_memo = entity.getPolicy_promotion_memo();
        if (policy_promotion_memo != null) {
            stmt.bindString(20, policy_promotion_memo);
        }
 
        String policy_promotion_cancel_time = entity.getPolicy_promotion_cancel_time();
        if (policy_promotion_cancel_time != null) {
            stmt.bindString(21, policy_promotion_cancel_time);
        }
 
        String policy_promotion_cancel_operator = entity.getPolicy_promotion_cancel_operator();
        if (policy_promotion_cancel_operator != null) {
            stmt.bindString(22, policy_promotion_cancel_operator);
        }
        stmt.bindLong(23, entity.getBranch_num());
        stmt.bindLong(24, entity.getPolicy_promotion_card_only() ? 1L: 0L);
        stmt.bindLong(25, entity.getPolicy_promotion_type());
        stmt.bindLong(26, entity.getPolicy_promotion_all() ? 1L: 0L);
        stmt.bindDouble(27, entity.getPolicy_promotion_discount());
 
        String policy_promotion_card_type = entity.getPolicy_promotion_card_type();
        if (policy_promotion_card_type != null) {
            stmt.bindString(28, policy_promotion_card_type);
        }
 
        String policy_promotion_repeat_type = entity.getPolicy_promotion_repeat_type();
        if (policy_promotion_repeat_type != null) {
            stmt.bindString(29, policy_promotion_repeat_type);
        }
 
        String policy_promotion_repeat_end = entity.getPolicy_promotion_repeat_end();
        if (policy_promotion_repeat_end != null) {
            stmt.bindString(30, policy_promotion_repeat_end);
        }
 
        String policy_promotion_except_item = entity.getPolicy_promotion_except_item();
        if (policy_promotion_except_item != null) {
            stmt.bindString(31, policy_promotion_except_item);
        }
 
        String policy_promotion_category = entity.getPolicy_promotion_category();
        if (policy_promotion_category != null) {
            stmt.bindString(32, policy_promotion_category);
        }
 
        String policy_promotion_item_category = entity.getPolicy_promotion_item_category();
        if (policy_promotion_item_category != null) {
            stmt.bindString(33, policy_promotion_item_category);
        }
        stmt.bindLong(34, entity.getPolicy_promotion_disable_pay_discount() ? 1L: 0L);
        stmt.bindLong(35, entity.getPolicy_promotion_card_once() ? 1L: 0L);
 
        String policy_promotion_last_edit_time = entity.getPolicy_promotion_last_edit_time();
        if (policy_promotion_last_edit_time != null) {
            stmt.bindString(36, policy_promotion_last_edit_time);
        }
 
        String policy_promotion_last_editor = entity.getPolicy_promotion_last_editor();
        if (policy_promotion_last_editor != null) {
            stmt.bindString(37, policy_promotion_last_editor);
        }
 
        Integer policy_promotion_total_limit = entity.getPolicy_promotion_total_limit();
        if (policy_promotion_total_limit != null) {
            stmt.bindLong(38, policy_promotion_total_limit);
        }
 
        String policy_promotion_level_ids = entity.getPolicy_promotion_level_ids();
        if (policy_promotion_level_ids != null) {
            stmt.bindString(39, policy_promotion_level_ids);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, PolicyPromotion entity) {
        stmt.clearBindings();
 
        String policy_promotion_no = entity.getPolicy_promotion_no();
        if (policy_promotion_no != null) {
            stmt.bindString(1, policy_promotion_no);
        }
 
        String policy_promotion_date_from = entity.getPolicy_promotion_date_from();
        if (policy_promotion_date_from != null) {
            stmt.bindString(2, policy_promotion_date_from);
        }
 
        String policy_promotion_date_to = entity.getPolicy_promotion_date_to();
        if (policy_promotion_date_to != null) {
            stmt.bindString(3, policy_promotion_date_to);
        }
 
        String policy_promotion_time_from = entity.getPolicy_promotion_time_from();
        if (policy_promotion_time_from != null) {
            stmt.bindString(4, policy_promotion_time_from);
        }
 
        String policy_promotion_time_to = entity.getPolicy_promotion_time_to();
        if (policy_promotion_time_to != null) {
            stmt.bindString(5, policy_promotion_time_to);
        }
 
        String policy_promotion_applied_branch = entity.getPolicy_promotion_applied_branch();
        if (policy_promotion_applied_branch != null) {
            stmt.bindString(6, policy_promotion_applied_branch);
        }
        stmt.bindLong(7, entity.getPolicy_promotion_mon_actived() ? 1L: 0L);
        stmt.bindLong(8, entity.getPolicy_promotion_tues_actived() ? 1L: 0L);
        stmt.bindLong(9, entity.getPolicy_promotion_wed_actived() ? 1L: 0L);
        stmt.bindLong(10, entity.getPolicy_promotion_thurs_actived() ? 1L: 0L);
        stmt.bindLong(11, entity.getPolicy_promotion_friday_actived() ? 1L: 0L);
        stmt.bindLong(12, entity.getPolicy_promotion_sat_actived() ? 1L: 0L);
        stmt.bindLong(13, entity.getPolicy_promotion_sun_actived() ? 1L: 0L);
        stmt.bindLong(14, entity.getPolicy_promotion_state_code());
 
        String policy_promotion_state_name = entity.getPolicy_promotion_state_name();
        if (policy_promotion_state_name != null) {
            stmt.bindString(15, policy_promotion_state_name);
        }
 
        String policy_promotion_create_time = entity.getPolicy_promotion_create_time();
        if (policy_promotion_create_time != null) {
            stmt.bindString(16, policy_promotion_create_time);
        }
 
        String policy_promotion_creator = entity.getPolicy_promotion_creator();
        if (policy_promotion_creator != null) {
            stmt.bindString(17, policy_promotion_creator);
        }
 
        String policy_promotion_audit_time = entity.getPolicy_promotion_audit_time();
        if (policy_promotion_audit_time != null) {
            stmt.bindString(18, policy_promotion_audit_time);
        }
 
        String policy_promotion_auditor = entity.getPolicy_promotion_auditor();
        if (policy_promotion_auditor != null) {
            stmt.bindString(19, policy_promotion_auditor);
        }
 
        String policy_promotion_memo = entity.getPolicy_promotion_memo();
        if (policy_promotion_memo != null) {
            stmt.bindString(20, policy_promotion_memo);
        }
 
        String policy_promotion_cancel_time = entity.getPolicy_promotion_cancel_time();
        if (policy_promotion_cancel_time != null) {
            stmt.bindString(21, policy_promotion_cancel_time);
        }
 
        String policy_promotion_cancel_operator = entity.getPolicy_promotion_cancel_operator();
        if (policy_promotion_cancel_operator != null) {
            stmt.bindString(22, policy_promotion_cancel_operator);
        }
        stmt.bindLong(23, entity.getBranch_num());
        stmt.bindLong(24, entity.getPolicy_promotion_card_only() ? 1L: 0L);
        stmt.bindLong(25, entity.getPolicy_promotion_type());
        stmt.bindLong(26, entity.getPolicy_promotion_all() ? 1L: 0L);
        stmt.bindDouble(27, entity.getPolicy_promotion_discount());
 
        String policy_promotion_card_type = entity.getPolicy_promotion_card_type();
        if (policy_promotion_card_type != null) {
            stmt.bindString(28, policy_promotion_card_type);
        }
 
        String policy_promotion_repeat_type = entity.getPolicy_promotion_repeat_type();
        if (policy_promotion_repeat_type != null) {
            stmt.bindString(29, policy_promotion_repeat_type);
        }
 
        String policy_promotion_repeat_end = entity.getPolicy_promotion_repeat_end();
        if (policy_promotion_repeat_end != null) {
            stmt.bindString(30, policy_promotion_repeat_end);
        }
 
        String policy_promotion_except_item = entity.getPolicy_promotion_except_item();
        if (policy_promotion_except_item != null) {
            stmt.bindString(31, policy_promotion_except_item);
        }
 
        String policy_promotion_category = entity.getPolicy_promotion_category();
        if (policy_promotion_category != null) {
            stmt.bindString(32, policy_promotion_category);
        }
 
        String policy_promotion_item_category = entity.getPolicy_promotion_item_category();
        if (policy_promotion_item_category != null) {
            stmt.bindString(33, policy_promotion_item_category);
        }
        stmt.bindLong(34, entity.getPolicy_promotion_disable_pay_discount() ? 1L: 0L);
        stmt.bindLong(35, entity.getPolicy_promotion_card_once() ? 1L: 0L);
 
        String policy_promotion_last_edit_time = entity.getPolicy_promotion_last_edit_time();
        if (policy_promotion_last_edit_time != null) {
            stmt.bindString(36, policy_promotion_last_edit_time);
        }
 
        String policy_promotion_last_editor = entity.getPolicy_promotion_last_editor();
        if (policy_promotion_last_editor != null) {
            stmt.bindString(37, policy_promotion_last_editor);
        }
 
        Integer policy_promotion_total_limit = entity.getPolicy_promotion_total_limit();
        if (policy_promotion_total_limit != null) {
            stmt.bindLong(38, policy_promotion_total_limit);
        }
 
        String policy_promotion_level_ids = entity.getPolicy_promotion_level_ids();
        if (policy_promotion_level_ids != null) {
            stmt.bindString(39, policy_promotion_level_ids);
        }
    }

    @Override
    protected final void attachEntity(PolicyPromotion entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public PolicyPromotion readEntity(Cursor cursor, int offset) {
        PolicyPromotion entity = new PolicyPromotion( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // policy_promotion_no
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // policy_promotion_date_from
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // policy_promotion_date_to
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // policy_promotion_time_from
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // policy_promotion_time_to
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // policy_promotion_applied_branch
            cursor.getShort(offset + 6) != 0, // policy_promotion_mon_actived
            cursor.getShort(offset + 7) != 0, // policy_promotion_tues_actived
            cursor.getShort(offset + 8) != 0, // policy_promotion_wed_actived
            cursor.getShort(offset + 9) != 0, // policy_promotion_thurs_actived
            cursor.getShort(offset + 10) != 0, // policy_promotion_friday_actived
            cursor.getShort(offset + 11) != 0, // policy_promotion_sat_actived
            cursor.getShort(offset + 12) != 0, // policy_promotion_sun_actived
            cursor.getInt(offset + 13), // policy_promotion_state_code
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // policy_promotion_state_name
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // policy_promotion_create_time
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // policy_promotion_creator
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // policy_promotion_audit_time
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // policy_promotion_auditor
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // policy_promotion_memo
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // policy_promotion_cancel_time
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // policy_promotion_cancel_operator
            cursor.getInt(offset + 22), // branch_num
            cursor.getShort(offset + 23) != 0, // policy_promotion_card_only
            cursor.getInt(offset + 24), // policy_promotion_type
            cursor.getShort(offset + 25) != 0, // policy_promotion_all
            cursor.getDouble(offset + 26), // policy_promotion_discount
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // policy_promotion_card_type
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // policy_promotion_repeat_type
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // policy_promotion_repeat_end
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // policy_promotion_except_item
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // policy_promotion_category
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // policy_promotion_item_category
            cursor.getShort(offset + 33) != 0, // policy_promotion_disable_pay_discount
            cursor.getShort(offset + 34) != 0, // policy_promotion_card_once
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // policy_promotion_last_edit_time
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // policy_promotion_last_editor
            cursor.isNull(offset + 37) ? null : cursor.getInt(offset + 37), // policy_promotion_total_limit
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38) // policy_promotion_level_ids
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, PolicyPromotion entity, int offset) {
        entity.setPolicy_promotion_no(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPolicy_promotion_date_from(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setPolicy_promotion_date_to(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setPolicy_promotion_time_from(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPolicy_promotion_time_to(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPolicy_promotion_applied_branch(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setPolicy_promotion_mon_actived(cursor.getShort(offset + 6) != 0);
        entity.setPolicy_promotion_tues_actived(cursor.getShort(offset + 7) != 0);
        entity.setPolicy_promotion_wed_actived(cursor.getShort(offset + 8) != 0);
        entity.setPolicy_promotion_thurs_actived(cursor.getShort(offset + 9) != 0);
        entity.setPolicy_promotion_friday_actived(cursor.getShort(offset + 10) != 0);
        entity.setPolicy_promotion_sat_actived(cursor.getShort(offset + 11) != 0);
        entity.setPolicy_promotion_sun_actived(cursor.getShort(offset + 12) != 0);
        entity.setPolicy_promotion_state_code(cursor.getInt(offset + 13));
        entity.setPolicy_promotion_state_name(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setPolicy_promotion_create_time(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setPolicy_promotion_creator(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setPolicy_promotion_audit_time(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setPolicy_promotion_auditor(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setPolicy_promotion_memo(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setPolicy_promotion_cancel_time(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setPolicy_promotion_cancel_operator(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setBranch_num(cursor.getInt(offset + 22));
        entity.setPolicy_promotion_card_only(cursor.getShort(offset + 23) != 0);
        entity.setPolicy_promotion_type(cursor.getInt(offset + 24));
        entity.setPolicy_promotion_all(cursor.getShort(offset + 25) != 0);
        entity.setPolicy_promotion_discount(cursor.getDouble(offset + 26));
        entity.setPolicy_promotion_card_type(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setPolicy_promotion_repeat_type(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setPolicy_promotion_repeat_end(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setPolicy_promotion_except_item(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setPolicy_promotion_category(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setPolicy_promotion_item_category(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setPolicy_promotion_disable_pay_discount(cursor.getShort(offset + 33) != 0);
        entity.setPolicy_promotion_card_once(cursor.getShort(offset + 34) != 0);
        entity.setPolicy_promotion_last_edit_time(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setPolicy_promotion_last_editor(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setPolicy_promotion_total_limit(cursor.isNull(offset + 37) ? null : cursor.getInt(offset + 37));
        entity.setPolicy_promotion_level_ids(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
     }
    
    @Override
    protected final String updateKeyAfterInsert(PolicyPromotion entity, long rowId) {
        return entity.getPolicy_promotion_no();
    }
    
    @Override
    public String getKey(PolicyPromotion entity) {
        if(entity != null) {
            return entity.getPolicy_promotion_no();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(PolicyPromotion entity) {
        return entity.getPolicy_promotion_no() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
